{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{106:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return d})),n.d(t,\"b\",(function(){return b}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n=\"function\"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:\"code\",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=u(n),m=r,b=d[\"\".concat(o,\".\").concat(m)]||d[m]||p[m]||c;return n?a.a.createElement(b,i(i({ref:t},l),{},{components:n})):a.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if(\"string\"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType=\"string\"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName=\"MDXCreateElement\"},85:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return i})),n.d(t,\"metadata\",(function(){return s})),n.d(t,\"toc\",(function(){return l})),n.d(t,\"default\",(function(){return d}));var r=n(3),a=n(7),c=(n(0),n(106)),o=[\"components\"],i={title:\"Interacting with on chain contract\"},s={unversionedId:\"SmartContracts/Interacting-with-on-chain-contract\",id:\"SmartContracts/Interacting-with-on-chain-contract\",isDocsHomePage:!1,title:\"Interacting with on chain contract\",description:\"Initialize\",source:\"@site/docs/SmartContracts/Interacting-with-on-chain-contract.md\",slug:\"/SmartContracts/Interacting-with-on-chain-contract\",permalink:\"/SmartContracts/Interacting-with-on-chain-contract\",editUrl:\"https://github.com/IDEP-network/IDEP-Docs/docs/SmartContracts/Interacting-with-on-chain-contract.md\",version:\"current\",sidebar:\"docs\",previous:{title:\"Obtain, Compile, Upload\",permalink:\"/SmartContracts/Obtain-Compile-Upload\"},next:{title:\"Validators Overview\",permalink:\"/ValidatorsOverview\"}},l=[{value:\"Initialize\",id:\"initialize\",children:[]}],u={toc:l};function d(e){var t=e.components,n=Object(a.a)(e,o);return Object(c.b)(\"wrapper\",Object(r.a)({},u,n,{components:t,mdxType:\"MDXLayout\"}),Object(c.b)(\"h2\",{id:\"initialize\"},\"Initialize\"),Object(c.b)(\"p\",null,\"First you neeed to create the init message. You can either create json file with text editor, or do it directly in a terminal, like this:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'INIT=\\'{\"purchase_price\":{\"amount\":\"100\",\"denom\":\"idep\"},\"transfer_price\":{\"amount\":\"999\",\"denom\":\"idep\"}}\\'\\n')),Object(c.b)(\"p\",null,\"Now we can instantiate the contract:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'iond tx wasm instantiate $CODE_ID \"$INIT\" --from wallet1 --label \"test contract deployment\" $TXFLAGS -y\\n')),Object(c.b)(\"p\",null,\"Get deployeed contracts address and save it:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"iond query wasm list-contract-by-code $CODE_ID --output json\\nCONTRACT=$(iond query wasm list-contract-by-code $CODE_ID  --output json | jq -r '.contracts[-1]')\\necho $CONTRACT\\n\")),Object(c.b)(\"p\",null,\"Now, some  query operations:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"iond query wasm contract $CONTRACT\\niond query bank balances $CONTRACT\\n\\n# dump whole contract state\\niond query wasm contract-state all $CONTRACT\\n\\n# Keys are in hex format whilevalue is in base64.\\n# To view returnted data:\\n# (Though in certain cases the binary returneed is not ascii, hence thee encoding)\\niond query wasm contract-state all $CONTRACT  --output \\\"json\\\" | jq -r '.models[0].key' | xxd -r -ps\\niond query wasm contract-state all $CONTRACT  --output \\\"json\\\" | jq -r '.models[0].value' | base64 -d\\n\\n# or try a \\\"smart query\\\", executing against the contract\\niond query wasm contract-state smart $CONTRACT '{}'\\n# (since we didn't implement any valid QueryMsg, we just get a parse error back)\\n\")),Object(c.b)(\"p\",null,\"Once contract instance is created, we can register a name and transfer it, paying the price:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'# in case the e person is incorrect the execute will fail\\nREGISTER=\\'{\"register\":{\"name\":\"fred\"}}\\'\\niond tx wasm execute $CONTRACT \"$REGISTER\" \\\\\\n    --amount 100idep \\\\\\n    --from wallet $TXFLAGS -y\\n\\n# query name\\nNAME_QUERY=\\'{\"resolve_record\": {\"name\": \"fred\"}}\\'\\niond query wasm contract-state smart $CONTRACT \"$NAME_QUERY\"  --output json\\n# {\"data\":{\"address\":\"idep1awadyj4c5xrhaqsmk36yr9dgt2z57wcedf5s39\"}}\\n\\n# purchase and then transfer the name record to wallet2 (change the \"to\" address to wallet2\\'s address which was generated in previous steps)\\nTRANSFER=\\'{\"transfer\":{\"name\":\"fred\",\"to\":\"idep1t4drw35er7lwlkyje3gwsnwehgwqaj77kl6mpc\"}}\\'\\niond tx wasm execute $CONTRACT \"$TRANSFER\" \\\\\\n    --amount 999idep \\\\\\n    --from wallet $TXFLAGS -y\\n')),Object(c.b)(\"p\",null,\"Check contract's new owner:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'NAME_QUERY=\\'{\"resolve_record\": {\"name\": \"fred\"}}\\'\\niond query wasm contract-state smart $CONTRACT \"$NAME_QUERY\"  --output json\\n# {\"data\":{\"address\":\"idep1t4drw35er7lwlkyje3gwsnwehgwqaj77kl6mpc\"}}\\n')))}d.isMDXComponent=!0}}]);","name":"assets/js/4f926c7d.07292030.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[14],{\n\n/***/ 106:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_aidas_Desktop_radek_IDEP_Docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_aidas_Desktop_radek_IDEP_Docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(106);\nvar _excluded=[\"components\"];var frontMatter={title:'Interacting with on chain contract'};var metadata={\"unversionedId\":\"SmartContracts/Interacting-with-on-chain-contract\",\"id\":\"SmartContracts/Interacting-with-on-chain-contract\",\"isDocsHomePage\":false,\"title\":\"Interacting with on chain contract\",\"description\":\"Initialize\",\"source\":\"@site/docs/SmartContracts/Interacting-with-on-chain-contract.md\",\"slug\":\"/SmartContracts/Interacting-with-on-chain-contract\",\"permalink\":\"/SmartContracts/Interacting-with-on-chain-contract\",\"editUrl\":\"https://github.com/IDEP-network/IDEP-Docs/docs/SmartContracts/Interacting-with-on-chain-contract.md\",\"version\":\"current\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"Obtain, Compile, Upload\",\"permalink\":\"/SmartContracts/Obtain-Compile-Upload\"},\"next\":{\"title\":\"Validators Overview\",\"permalink\":\"/ValidatorsOverview\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Initialize',id:'initialize',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_aidas_Desktop_radek_IDEP_Docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_aidas_Desktop_radek_IDEP_Docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"initialize\"},\"Initialize\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"First you neeed to create the init message. You can either create json file with text editor, or do it directly in a terminal, like this:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"INIT='{\\\"purchase_price\\\":{\\\"amount\\\":\\\"100\\\",\\\"denom\\\":\\\"idep\\\"},\\\"transfer_price\\\":{\\\"amount\\\":\\\"999\\\",\\\"denom\\\":\\\"idep\\\"}}'\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Now we can instantiate the contract:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"iond tx wasm instantiate $CODE_ID \\\"$INIT\\\" --from wallet1 --label \\\"test contract deployment\\\" $TXFLAGS -y\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Get deployeed contracts address and save it:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"iond query wasm list-contract-by-code $CODE_ID --output json\\nCONTRACT=$(iond query wasm list-contract-by-code $CODE_ID  --output json | jq -r '.contracts[-1]')\\necho $CONTRACT\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Now, some  query operations:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"iond query wasm contract $CONTRACT\\niond query bank balances $CONTRACT\\n\\n# dump whole contract state\\niond query wasm contract-state all $CONTRACT\\n\\n# Keys are in hex format whilevalue is in base64.\\n# To view returnted data:\\n# (Though in certain cases the binary returneed is not ascii, hence thee encoding)\\niond query wasm contract-state all $CONTRACT  --output \\\"json\\\" | jq -r '.models[0].key' | xxd -r -ps\\niond query wasm contract-state all $CONTRACT  --output \\\"json\\\" | jq -r '.models[0].value' | base64 -d\\n\\n# or try a \\\"smart query\\\", executing against the contract\\niond query wasm contract-state smart $CONTRACT '{}'\\n# (since we didn't implement any valid QueryMsg, we just get a parse error back)\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Once contract instance is created, we can register a name and transfer it, paying the price:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"# in case the e person is incorrect the execute will fail\\nREGISTER='{\\\"register\\\":{\\\"name\\\":\\\"fred\\\"}}'\\niond tx wasm execute $CONTRACT \\\"$REGISTER\\\" \\\\\\n    --amount 100idep \\\\\\n    --from wallet $TXFLAGS -y\\n\\n# query name\\nNAME_QUERY='{\\\"resolve_record\\\": {\\\"name\\\": \\\"fred\\\"}}'\\niond query wasm contract-state smart $CONTRACT \\\"$NAME_QUERY\\\"  --output json\\n# {\\\"data\\\":{\\\"address\\\":\\\"idep1awadyj4c5xrhaqsmk36yr9dgt2z57wcedf5s39\\\"}}\\n\\n# purchase and then transfer the name record to wallet2 (change the \\\"to\\\" address to wallet2's address which was generated in previous steps)\\nTRANSFER='{\\\"transfer\\\":{\\\"name\\\":\\\"fred\\\",\\\"to\\\":\\\"idep1t4drw35er7lwlkyje3gwsnwehgwqaj77kl6mpc\\\"}}'\\niond tx wasm execute $CONTRACT \\\"$TRANSFER\\\" \\\\\\n    --amount 999idep \\\\\\n    --from wallet $TXFLAGS -y\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Check contract's new owner:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"NAME_QUERY='{\\\"resolve_record\\\": {\\\"name\\\": \\\"fred\\\"}}'\\niond query wasm contract-state smart $CONTRACT \\\"$NAME_QUERY\\\"  --output json\\n# {\\\"data\\\":{\\\"address\\\":\\\"idep1t4drw35er7lwlkyje3gwsnwehgwqaj77kl6mpc\\\"}}\\n\")));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}