{"remainingRequest":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/docs/Litepaper.md","dependencies":[{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/docs/Litepaper.md","mtime":1629267540185},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-litepaper-md-d03.json","mtime":1629297537803},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1619444066013},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1619444065971},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1619444065747},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1619444065763}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}