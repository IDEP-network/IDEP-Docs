{"remainingRequest":"/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/aidas/Desktop/Docs/IDEP-Docs/docs/Litepaper.md","dependencies":[{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/docs/Litepaper.md","mtime":1635086719409},{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-litepaper-md-d03.json","mtime":1635112777584},{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1635086720012},{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1635086719970},{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1635086719728},{"path":"/Users/aidas/Desktop/Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1635086719739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}