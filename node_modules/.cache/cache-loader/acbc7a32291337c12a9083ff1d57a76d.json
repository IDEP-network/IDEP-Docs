{"remainingRequest":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","dependencies":[{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","mtime":1619444065809},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1619444066013},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1619444065971}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}