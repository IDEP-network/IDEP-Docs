{"remainingRequest":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/aidas/Desktop/radek/IDEP-Docs/docs/GettingStarted/Litepaper.md","dependencies":[{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/docs/GettingStarted/Litepaper.md","mtime":1646610454658},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-getting-started-litepaper-md-5f9.json","mtime":1646610794948},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1646592944148},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1646592944941},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1646592944161},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1646592945632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}