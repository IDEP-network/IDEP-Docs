{"remainingRequest":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","mtime":1630332973197},{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1630332960938},{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1630332960875}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}