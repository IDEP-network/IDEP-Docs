{"remainingRequest":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/docs/Litepaper.md","dependencies":[{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/docs/Litepaper.md","mtime":1619444268105},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-litepaper-md-d03.json","mtime":1619445145863},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1619444066013},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1619444065971},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1619444065747},{"path":"/Users/aidas/Desktop/IDEP-Docs/IDEP-Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1619444065763}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FpZGFzL0Rlc2t0b3AvSURFUC1Eb2NzL0lERVAtRG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e3RpdGxlOidJREVQIExpdGVwYXBlcid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJMaXRlcGFwZXIiLCJpZCI6IkxpdGVwYXBlciIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJJREVQIExpdGVwYXBlciIsImRlc2NyaXB0aW9uIjoiY292ZXJpbWFnZSIsInNvdXJjZSI6IkBzaXRlL2RvY3MvTGl0ZXBhcGVyLm1kIiwic2x1ZyI6Ii9MaXRlcGFwZXIiLCJwZXJtYWxpbmsiOiIvTGl0ZXBhcGVyIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9JREVQLW5ldHdvcmsvSURFUC1Eb2NzL2RvY3MvTGl0ZXBhcGVyLm1kIiwidmVyc2lvbiI6ImN1cnJlbnQiLCJzaWRlYmFyIjoiZG9jcyIsInByZXZpb3VzIjp7InRpdGxlIjoiV2VsY29tZSIsInBlcm1hbGluayI6Ii8ifSwibmV4dCI6eyJ0aXRsZSI6IklQRlMtUHJpdmF0ZS1OZXR3b3JrIiwicGVybWFsaW5rIjoiL0lQRlMifX07LyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqLyAvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCB0b2M9W3t2YWx1ZTonSW50cm9kdWN0aW9uJyxpZDonaW50cm9kdWN0aW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidGb3VuZGF0aW9uYWwgTW9kdWxlcycsaWQ6J2ZvdW5kYXRpb25hbC1tb2R1bGVzJyxjaGlsZHJlbjpbe3ZhbHVlOidVcHRha2UnLGlkOid1cHRha2UnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0lERU5UVCcsaWQ6J2lkZW50dCcsY2hpbGRyZW46W119LHt2YWx1ZTonSURFUCBTd2FwJyxpZDonaWRlcC1zd2FwJyxjaGlsZHJlbjpbXX1dfSx7dmFsdWU6J1Byb2plY3QgZmVhdHVyZXMnLGlkOidwcm9qZWN0LWZlYXR1cmVzJyxjaGlsZHJlbjpbe3ZhbHVlOidMYXllciAxJyxpZDonbGF5ZXItMScsY2hpbGRyZW46W119LHt2YWx1ZTonSW50ZXJvcGVyYWJpbGl0eScsaWQ6J2ludGVyb3BlcmFiaWxpdHknLGNoaWxkcmVuOltdfSx7dmFsdWU6J0VWTScsaWQ6J2V2bScsY2hpbGRyZW46W119XX0se3ZhbHVlOidJREVQIFRva2Vub21pY3MnLGlkOidpZGVwLXRva2Vub21pY3MnLGNoaWxkcmVuOlt7dmFsdWU6J0Jhc2ljIEluZm9ybWF0aW9uJyxpZDonYmFzaWMtaW5mb3JtYXRpb24nLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonR292ZXJuYW5jZScsaWQ6J2dvdmVybmFuY2UnLGNoaWxkcmVuOlt7dmFsdWU6J1N1bW1hcnknLGlkOidzdW1tYXJ5JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTY29wZSBvZiBHb3Zlcm5hbmNlJyxpZDonc2NvcGUtb2YtZ292ZXJuYW5jZScsY2hpbGRyZW46W119LHt2YWx1ZTonR2FsYWN0aWMgSW1wcm92ZW1lbnQgUHJvcG9zYWwgKEdJUCknLGlkOidnYWxhY3RpYy1pbXByb3ZlbWVudC1wcm9wb3NhbC1naXAnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0dhbGFjdGljIE1ldHJpY3MgUHJvcG9zYWwgKEdNUCknLGlkOidnYWxhY3RpYy1tZXRyaWNzLXByb3Bvc2FsLWdtcCcsY2hpbGRyZW46W119XX0se3ZhbHVlOidSb2FkbWFwJyxpZDoncm9hZG1hcCcsY2hpbGRyZW46W119LHt2YWx1ZTonTG9va2luZyBBaGVhZCcsaWQ6J2xvb2tpbmctYWhlYWQnLGNoaWxkcmVuOltdfV07Y29uc3QgbGF5b3V0UHJvcHM9e3RvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJjb3ZlcmltYWdlIixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhL1VzZXJzL2FpZGFzL0Rlc2t0b3AvSURFUC1Eb2NzL0lERVAtRG9jcy9zdGF0aWMvaW1nL2NvdmVyaW1hZ2UucG5nIikuZGVmYXVsdH0pKSxtZHgoImgyIix7ImlkIjoiaW50cm9kdWN0aW9uIn0sYEludHJvZHVjdGlvbmApLG1keCgicCIsbnVsbCxgSURFUCBpcyBhbiBORlQyLjAgQmxvY2tjaGFpbiB0aGF0IGZvY3VzZXMgb24gZGVjZW50cmFsaXplZCBkaWdpdGFsIG1lZGlhLiBJdCBpcyBidWlsdCB1c2luZyB0aGUgVGVuZGVybWludCBjb25zZW5zdXMgZW5naW5lCmFuZCBDb3Ntb3MgU0RLLiBJREVQIHdpbGwgbGF1bmNoIHdpdGggMyBtYWluIGZvdW5kYXRpb25hbCBtb2RlbHMgdG8ga2ljayBzdGFydCB0aGUgZWNvc3lzdGVtLiBVcHRha2UgLSB0aGUgbmV4dCBnZW5lcmF0aW9uCk5GVDIuMCBwbGF0Zm9ybSwgSURFTlRUIC0gYSBoeXBlciBleHRlbnNpYmxlIG9uLWNoYWluIHByb2ZpbGUsIGFuZCBJREVQLVN3YXAgLSBhbiBBTU0gc3dhcCBhbmQgbWFya2V0cGxhY2UgZm9yIGRpZ2l0YWwgYXNzZXRzLgpJREVQIGlzIHRoZSBuYXRpdmUgdXRpbGl0eSB0b2tlbiBvZiB0aGUgSURFUCBOZXR3b3JrLmApLG1keCgicCIsbnVsbCxgVGhlIElERVAgTmV0d29yayBpcyBiZWluZyBkZXZlbG9wZWQgYnkgdGhlIElERVAgRm91bmRhdGlvbi4gVGhlIElERVAgRm91bmRhdGlvbiB3aWxsIGZhY2lsaXRhdGUgdGhlIGVhcmx5LXN0YWdlIGRldmVsb3BtZW50Cm9mIHRoZSBibG9ja2NoYWluLCBieSBjcmVhdGluZyB0aGUgcHJlbWllciBkaWdpdGFsIG1lZGlhIGZvY3VzZWQgZWNvc3lzdGVtLiBVbHRpbWF0ZWx5LCB0aGUgdmlzaW9uIGlzIGZvciB0aGUgSURFUCBOZXR3b3JrCnRvIGJlY29tZSB0aGUgYmlnZ2VzdCBjb21tdW5pdHkgZ292ZXJuZWQgTkZUIGJsb2NrY2hhaW4uYCksbWR4KCJoMiIseyJpZCI6ImZvdW5kYXRpb25hbC1tb2R1bGVzIn0sYEZvdW5kYXRpb25hbCBNb2R1bGVzYCksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJhcmNoaXRlY3R1cmUiLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEvVXNlcnMvYWlkYXMvRGVza3RvcC9JREVQLURvY3MvSURFUC1Eb2NzL3N0YXRpYy9pbWcvYXJjaGl0ZWN0dXJlLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJoMyIseyJpZCI6InVwdGFrZSJ9LGBVcHRha2VgKSxtZHgoInAiLG51bGwsYFVwdGFrZSBpcyBJREVQ4oCZcyBvbmUtc3RvcCBORlQgbmF0aXZlIG1vZHVsZS4gVXB0YWtlIHdpbGwgYWxsb3cgY3JlYXRvcnMgdG8gcXVpY2tseSBtaW50IGFueSBmb3JtIG9mIE5GVC4gVGhlIFVwdGFrZSBpbnRlcmZhY2UKd2lsbCBjb21lIGluIDIgZmxhdm9ycy4gRmlyc3QsIHRoZXJlIGlzIGFuIGVsZWdhbnQgVUkvVVggZm9yIGV2ZXJ5ZGF5IHVzZS4gU2Vjb25kLCBhIG1vcmUgZXh0ZW5zaWJsZSBTREsgdmVyc2lvbiB3aWxsIGJlCmRlcGxveWVkIGFsbG93aW5nIGRldmVsb3BlcnMgdG8gY3JlYXRlIGludHJpY2F0ZSB2ZXJzaW9ucyBvZiBORlRzIHJlYWR5IHRvIG5hdGl2ZWx5IGludGVncmF0ZSBpbnRvIHRoZWlyIGdhbWVzIGFuZCBkYXBwcy4KVXB0YWtlIGFsbG93cyB1c2VycyB0byB0YWtlIGFkdmFudGFnZSBvZiBhbiBleHRyZW1lbHkgZGVzY3JpcHRpdmUgTkZUMi4wIHN0YW5kYXJkLiBXaXRoIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBhbgpleHRlbnNpdmUga2V5c3RvcmUgdmFsdWUgKHdpdGggdGhlIGFiaWxpdHkgdG8gcmVmZXJlbmNlIG9mZi1jaGFpbiBhbmQgb24tY2hhaW4gZmlsZXMgaW4gdGhlIE5GVDIuMCBzdGFuZGFyZCkgVXB0YWtlIGFsbG93cwp1c2VycyB0byBjb25zdHJ1Y3QgYW5kIGh5YnJpZGl6ZSB2YXJpb3VzIHZlcnNpb25zIG9mIHBoeXNpY2FsIGFuZCBkaWdpdGFsIE5GVOKAmXMuIE9uY2UgdGhlIG1pbnRpbmcgaXMgY29tcGxldGUsIHRoZSBvd25lcgppcyB0aGVuIGFibGUgdG8gY29tcGxldGVseSBjdXN0b21pemUgaGlzIG9yIGhlciB0b2tlbnMuIFRoZSBjdXN0b21pemFiaWxpdHkgb2YgdG9rZW5zIG1lYW5zIHRoYXQgY3JlYXRvcnMgYXJlIGZyZWUgdG8gZGVjaWRlCnVwb24gdGhlaXIgZnVuY3Rpb25hbGl0eSwgdG90YWwgc3VwcGx5LCB0YXJnZXQgcmVjaXBpZW50cywgbmFtZSwgYW5kIGJyYW5kaW5nLmApLG1keCgicCIsbnVsbCxgS2V5IEZlYXR1cmVzYCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgU3VwcG9ydCBmb3IgbGVnYWN5IE5GVCBjcmVhdGlvbmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBYmlsaXR5IHRvIG1pbnQgTkZUMi4wYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEludGVsbGVjdHVhbCBzbWFydCBjb250cmFjdCBsYXllciBpbnRlZ3JhdGlvbmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBEZXZlbG9wZXIgU0RLYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYE5GVDIuMCBHYW1pZmljYXRpb25gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgUGh5c2ljYWwgTkZUMi4wYCkpLG1keCgiaDMiLHsiaWQiOiJpZGVudHQifSxgSURFTlRUYCksbWR4KCJwIixudWxsLGBJREVOVFQgaXMgYW4gb3Blbi1zb3VyY2UgbGlnaHR3ZWlnaHQgc3RhbmRhcmQgdGhhdCB3aWxsIGFsbG93IGZvciBkZWNlbnRyYWxpemVkIGdvdmVybmFuY2UsIGFzc2V0IG93bmVyc2hpcCwgYSByZXB1dGF0aW9uCnN5c3RlbSwgYW5kIG1vcmUuIEZvciBhIHNtYWxsIGZlZSB0aGUgcHJvZmlsZSBjYW4gYmUgbWludGVkIHRvIHNlcnZlIGFzIHRoZSBiYXNpcyBmb3IgYWxsIG9uLWNoYWluIHNvY2lhbCBhY3Rpdml0aWVzLiBCeQp1c2luZyBibG9ja2NoYWluIHRlY2hub2xvZ3ksIG9uLWNoYWluIGlkZW50aXRpZXMgYmVjb21lIHBlcm1hbmVudCwgcGxhdGZvcm0tYWdub3N0aWMsIGFuZCBpbnRlcm9wZXJhYmxlLiBUaGV5IGFsbG93IHVzZXJzCnRvIG1haW50YWluIHRoZWlyIHBlcnNvbmFsIHNvY2lhbCByZXB1dGF0aW9uIGFjcm9zcyBhbGwgc3lzdGVtcyBhbmQgbG9naW5zLiBGcm9tIGEgZm91bmRhdGlvbmFsIHBlcnNwZWN0aXZlLCBhIGRlY2VudHJhbGl6ZWQKcHJvZmlsZSBpcyBhIHNtYXJ0LWNvbnRyYWN0IGFkZHJlc3MgdGhhdCByZXByZXNlbnRzIGEgcGVyc29uLCBjb21wYW55LCBvciBvYmplY3QuIEJ5IHBsYWNpbmcgdGhlIGlkZW50aXR5IGluZnJhc3RydWN0dXJlCmluc2lkZSBhIHNtYXJ0LWNvbnRyYWN0LCB3ZSBjYW4gbWFrZSB1c2Ugb2YgdGhlIGNvbXBsZXggbG9naWMgdGhhdCBjYW4gYmUgYWRkZWQgdG8gaXQgYW5kIGxldmVyYWdlIGludHJhY3RhYmlsaXR5IHRoYXQgY29tZXMKd2l0aCBpdC5gKSxtZHgoInAiLG51bGwsYEtleSBGZWF0dXJlc2ApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEFiaWxpdHkgdG8gc3RvcmUgbXVsdGlwbGUgY3J5cHRvIGFzc2V0c2ApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBYmlsaXR5IGZvciBhIHRoaXJkIHBhcnR5IHRvIHBheSBmb3IgZ2FzIGZlZXNgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgRWFzeSBhY2NvdW50IHJlY292ZXJ5YCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEFiaWxpdHkgdG8gYWN0IGFzIGEgcHJveHkgYWNjb3VudCBhbmQgZXhlY3V0ZSBzbWFydCBjb250cmFjdHNgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgTXVsdGlwbGUgb3duZXJzIHdpdGggdmFyeWluZyBsZXZlbHMgb2YgYWNjZXNzYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEludGVyb3BlcmFibGUgd2l0aCB2aXJ0dWFsbHkgYW55IHBsYXRmb3JtIGFuZCBrZXkgbWFuYWdlcmApKSxtZHgoImgzIix7ImlkIjoiaWRlcC1zd2FwIn0sYElERVAgU3dhcGApLG1keCgicCIsbnVsbCxgSURFUCBTd2FwIGlzIElERVAgTmV0d29ya+KAmXMgb24tY2hhaW4gQXV0byBNYXJrZXQgTWFrZXIgYCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgKEFNTSlgKSxgLCB0aGF0IHByb3ZpZGVzIGxpcXVpZGl0eSB0byBibG9ja2NoYWluIG5hdGl2ZSBORlQyLjAsIHRoZSBJREVQCnV0aWxpdHkgdG9rZW4sIGFuZCBvdGhlciBmdW5naWJsZSB0b2tlbnMuIElERVAgc3dhcCBhZG9wdHMgdGhlIENvbnN0YW50IFByb2R1Y3QgTWFya2V0IE1ha2VyIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYChDUE1NKWApLGAgbW9kZWwuIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYENQTU1zYCksYCBhcmUgYmFzZWQKb24gdGhlIGZ1bmN0aW9uIHgg4oiXIHkgPSBrLCB3aGljaCBlc3RhYmxpc2hlcyBhIHJhbmdlIG9mIHByaWNlcyBmb3IgdHdvIHRva2VucyBhY2NvcmRpbmcgdG8gdGhlIGF2YWlsYWJsZSBxdWFudGl0aWVzIChsaXF1aWRpdHkpCm9mIGVhY2ggdG9rZW4uIFdpdGhpbiBJREVQIFN3YXAsIHVzZXJzIGNhbiB0cmFkZSB0b2tlbiBwYWlycyBvciBwcm92aWRlIGxpcXVpZGl0eSB0byBhIGNob3NlbiBsaXF1aWRpdHkgcG9vbCBieSBkZXBvc2l0aW5nCnRva2VucyB0byBwcm92aWRlIGVxdWFsIGxpcXVpZGl0eSBvbiBib3RoIHNpZGVzIG9mIHRoZSB0cmFkaW5nIHBhaXIuIElERVAgU3dhcCBhbHNvIGhhcyB0aGUgYWJpbGl0eSB0byBkZXBsb3kgYSBjdXN0b21pemFibGUKTkZUMi4wIG1hcmtldHBsYWNlLiBUaGlzIGZlYXR1cmUgZ2l2ZXMgYXJ0aXN0cyBhbmQgY29udGVudCBjcmVhdG9ycyBhIHNpbXBsZSB3YXkgdG8gaW50ZWdyYXRlIHRoZWlyIG93biBkZWNlbnRyYWxpemVkIG1hcmtldHBsYWNlLgpOYXRpdmUgTkZUIG1hcmtldHBsYWNlIGludGVncmF0aW9uIGlzIGNydWNpYWwgZm9yIGluZHVzdHJ5LXdpZGUgYWRvcHRpb24gc3VjaCBhcyBnYW1pbmcgYW5kIHZpZGVvIHN0cmVhbWluZy5gKSxtZHgoInAiLG51bGwsYEtleSBGZWF0dXJlc2ApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEN1c3RvbWl6YWJsZSBhc3NldCBwb29sc2ApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBTb3ZlcmVpZ24gTkZUMi4wIG1hcmtldHBsYWNlYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYExvdyBzbGlwcGFnZWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBEZXZlbG9wZXIgU0RLYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEludGVyb3BlcmFibGVgKSksbWR4KCJoMiIseyJpZCI6InByb2plY3QtZmVhdHVyZXMifSxgUHJvamVjdCBmZWF0dXJlc2ApLG1keCgiaDMiLHsiaWQiOiJsYXllci0xIn0sYExheWVyIDFgKSxtZHgoInAiLG51bGwsYElERVAgTmV0d29yayB0YWtlcyB0aGUgcGhpbG9zb3BoeSBvZiBpbXBsZW1lbnRpbmcgYSBwdXJwb3NlLWRyaXZlbiBibG9ja2NoYWluLiBNYW55IG9mIHRvZGF5J3MgQmxvY2tjaGFpbnMgYXJlIGdlbmVyYWwgbmV0d29ya3MKdGhhdCBhcmUgYXBwbGljYWJsZSB0byBtYW55IHVzZS1jYXNlcy4gVGhpcyBsYWNrIG9mIGZvY3VzIGFuZCBicm9hZCB1c2UgY2FzZXMgcmFyZWx5IGJyaW5ncyBhIGNvbmNyZXRlIGZyYW1ld29yayB0byBtYWpvcgppbmR1c3RyaWVzLiBUaGlzIG5lZ2F0aXZlbHkgaW1wYWN0cyB0aGUgbmF0aXZlIHByb2plY3RzIGFuZCBjb21tdW5pdGllcy4gSURFUCBiZWxpZXZlcyB0aGF0IGJsb2NrY2hhaW4gYXJjaGl0ZWN0dXJlIHNob3VsZApiZSB0YWlsb3JlZCB0byBjcmVhdGUgYW4gZWNvc3lzdGVtIHRoYXQgaXMgYmVzdCBzdWl0ZWQgdG8gaW5jdWJhdGUgYW5kIG51cnR1cmUgYSBzcGVjaWZpYyBjb21tdW5pdHkuIElERVAgYWxsb3dzIGZvciByZWFsCndvcmxkIHVzZSBjYXNlcyBzb2xlbHkgZGlyZWN0ZWQgdG93YXJkcyB0aGUgZGlnaXRhbCBjb250ZW50IGFyZW5hLiBUaGlzIGh5cGVyZm9jdXMgYWxsb3dzIGNyZWF0b3JzIGFuZCB1c2VycyB0byBlYXNpbHkgaW50ZXJtaW5nbGUKd2l0aCBvbmUgYW5vdGhlciB0byBiZXR0ZXIgc2hhcmUgbmV3IGlkZWFzIGFuZCBmb3N0ZXIgbmV3IHJlbGF0aW9uc2hpcHMuIGApLG1keCgiaDMiLHsiaWQiOiJpbnRlcm9wZXJhYmlsaXR5In0sYEludGVyb3BlcmFiaWxpdHlgKSxtZHgoInAiLG51bGwsYElERVAgTmV0d29yayBpcyBwYXJ0IG9mIENvc21vcywgYSBibG9ja2NoYWluIG5ldHdvcmsgYXJjaGl0ZWN0dXJlLiBDb3Ntb3MgaXMgYSBuZXR3b3JrIG9mIG1hbnkgaW5kZXBlbmRlbnQgYmxvY2tjaGFpbnMsIGNhbGxlZAp6b25lcy4gRWFjaCB6b25lIGluIENvc21vcyBpcyBjb25uZWN0ZWQgdGhyb3VnaCB0aGUgSW50ZXItQmxvY2tjaGFpbiBDb21tdW5pY2F0aW9uIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYChJQkMpYCksYCBwcm90b2NvbCB3aGljaCBhbGxvd3MgQ29zbW9zIGJsb2NrY2hhaW5zCnRvIGNvbW11bmljYXRlIHRvIG9uZSBhbm90aGVyLiAgVGhlIElCQyBwcm90b2NvbCBjYW4gYmUgZGVmaW5lZCB1c2luZyB0d28gdHlwZXMgb2YgdHJhbnNhY3Rpb25zOyBhbiBJQkNCbG9ja0NvbW1pdFR4IHRyYW5zYWN0aW9uLAp3aGljaCBhbGxvd3MgYSBibG9ja2NoYWluIHRvIHByb3ZlIHRvIGFueSBvYnNlcnZlciBvZiBpdHMgbW9zdCByZWNlbnQgYmxvY2staGFzaCwgYW5kIGFuIElCQ1BhY2tldFR4IHRyYW5zYWN0aW9uLCB3aGljaCBhbGxvd3MKYSBibG9ja2NoYWluIHRvIHByb3ZlIHRvIGFueSBvYnNlcnZlciB0aGF0IHRoZSBnaXZlbiBwYWNrZXQgd2FzIHB1Ymxpc2hlZCBieSB0aGUgc2VuZGVy4oCZcyBhcHBsaWNhdGlvbiB2aWEgYSBNZXJrbGUtcHJvb2YgdG8KdGhlIHJlY2VudCBibG9jay1oYXNoLiBCeSBzcGxpdHRpbmcgdGhlIElCQyBtZWNoYW5pY3MgaW50byB0d28gc2VwYXJhdGUgdHJhbnNhY3Rpb25zLCB3ZSBhbGxvdyB0aGUgcmVjZWl2aW5nIGNoYWluIHRvIGRldGVybWluZQp3aGljaCBwYWNrZXRzIGdldCBjb21taXR0ZWQsIGFuZCBhbGxvdyBmb3IgY29tcGxldGUgZnJlZWRvbSBvbiB0aGUgc2VuZGluZyBjaGFpbiBhcyB0byBob3cgbWFueSBvdXRib3VuZCBwYWNrZXRzIGFyZSBhbGxvd2VkLmApLG1keCgiaDMiLHsiaWQiOiJldm0ifSxgRVZNYCksbWR4KCJwIixudWxsLGBJREVQIGhhcyBmdWxseSBpbnRlZ3JhdGVkIHRoZSBFdGhlcmV1bSBWaXJ0dWFsIE1hY2hpbmUgYCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgKEVWTSlgKSxgIGludG8gaXRzIGNvcmUgYXJjaGl0ZWN0dXJlLiBCeSBsZXZlcmFnaW5nIEVWTSBhcyBhIGJhc2lzLCB0aGUKZW50aXJlIGtub3dsZWRnZSBiYXNlIG9mIEV0aGVyZXVtIGlzIGRpcmVjdGx5IGFwcGxpY2FibGUgdG8gSURFUCAtIGRldmVsb3BlcnMgY2FuIHV0aWxpemUgYWxsIHRoZSB0b29scyBhbmQgdHV0b3JpYWxzIHRoYXQKYWxyZWFkeSBoYXZlIGJlZW4gYnVpbHQgZm9yIHRoZSBFdGhlcmV1bSBlY29zeXN0ZW0uIFRoaXMgYWxsb3dzIGZvciBleGlzdGluZyBwcm9qZWN0cyBmcm9tIHRoZSBORlQgYW5kIGRpZ2l0YWwgbWVkaWEgaW5kdXN0cnkKdG8gZWFzaWx5IHRyYW5zaXRpb24gZnJvbSBFdGhlcmV1bSB0byBJREVQIHRvIHRha2UgYWR2YW50YWdlIG9mIGZhc3QgdHJhbnNhY3Rpb24gc3BlZWRzLCBzZWN1cml0eSwgYW5kIGxvdyBnYXMgZmVlcy4gVWx0aW1hdGVseSwKdGhpcyB3aWxsIGFsbG93IHByb2plY3RzIHRvIGNvb3BlcmF0ZSB3aXRoIG90aGVyIGRpZ2l0YWwgY29udGVudCBtaW5kZWQgcHJvamVjdHMgaW4gb25lIGVjb3N5c3RlbS5gKSxtZHgoImgyIix7ImlkIjoiaWRlcC10b2tlbm9taWNzIn0sYElERVAgVG9rZW5vbWljc2ApLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgSURFUGApLGAgaXMgdGhlIHV0aWxpdHkgdG9rZW4gb2YgdGhlIElERVAgTmV0d29yayB1c2VkIHRvIHBheSBmb3IgdHJhbnNhY3Rpb24gZmVlcyBhbmQgc2VydmljZXMgYW5kIHdpbGwgYmUgbWludGVkIGFuZCBkaXN0cmlidXRlZAphcyBhIHN0YWtpbmcgcmV3YXJkIHRocm91Z2hvdXQgdGhlIGxpZmUgb2YgdGhlIGVjb3N5c3RlbS5gKSxtZHgoImgzIix7ImlkIjoiYmFzaWMtaW5mb3JtYXRpb24ifSxgQmFzaWMgSW5mb3JtYXRpb25gKSxtZHgoInAiLG51bGwsYFRva2VuIE5hbWU6IGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYElERVBgKSxtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSxgCmAsYEluaXRpYWwgU3VwcGx5OiAxNTAsMDAwLDAwMGAsbWR4KCJiciIse3BhcmVudE5hbWU6InAifSksYApgLGBFYXJseSBpbmZsYXRpb24gcmF0ZTogNy0yMCVgLG1keCgiYnIiLHtwYXJlbnROYW1lOiJwIn0pLGAKYCxtZHgoImltZyIse2FsdDoidG9rZW5vbWljcyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS9Vc2Vycy9haWRhcy9EZXNrdG9wL0lERVAtRG9jcy9JREVQLURvY3Mvc3RhdGljL2ltZy9Ub2tlbl9BbGxvY2F0aW9uLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJoMiIseyJpZCI6ImdvdmVybmFuY2UifSxgR292ZXJuYW5jZWApLG1keCgiaDMiLHsiaWQiOiJzdW1tYXJ5In0sYFN1bW1hcnlgKSxtZHgoInAiLG51bGwsYFRoZSBJREVQIEZvdW5kYXRpb24gYWltcyB0byBpbnZvbHZlIHRoZSB3aG9sZSBjb21tdW5pdHkgdG8gcGFydGljaXBhdGUgaW4gdGhlIG5leHQgZ2VuZXJhdGlvbiBORlQgZWNvc3lzdGVtLiBJREVQIGlzIHRoZQpwcm9qZWN0IGdvdmVybmFuY2UgdG9rZW4gYW5kIElERVAgaG9sZGVycyBjYW4gcGFydGljaXBhdGUgaW4gZ292ZXJuYW5jZSB0aHJvdWdoIHN0YWtpbmcgdGhlaXIgdG9rZW5zIHdpdGggdmFsaWRhdG9ycyB0aGF0CmJlc3QgcmVwcmVzZW50IHRoZWlyIHZpc2lvbiBmb3IgdGhlIG5ldHdvcmsuIEFzIHRoZSBlY29zeXN0ZW0gY3JlYXRvcnMsIHRoZSBJREVQIEZvdW5kYXRpb24gaXMgY29udHJpYnV0aW5nIGFsbCB0aGUgbmVjZXNzYXJ5CmluaXRpYWwgcmVzb3VyY2VzIGFuZCBpcyBwcmVzZW50bHkgZ292ZXJuaW5nIHRoZSBlY29zeXN0ZW0gdG8gbnVydHVyZSBhbmQgZ3JvdyB0aGUgcHJvamVjdCBhdCBpdHMgZWFybHkgc3RhZ2VzLCB0byBmYWNpbGl0YXRlCnRoZSBsb25nLXRlcm0gZ3Jvd3RoIGFzIGVmZmljaWVudGx5IGFzIHBvc3NpYmxlLmApLG1keCgiaDMiLHsiaWQiOiJzY29wZS1vZi1nb3Zlcm5hbmNlIn0sYFNjb3BlIG9mIEdvdmVybmFuY2VgKSxtZHgoInAiLG51bGwsYElERVAgZWNvc3lzdGVtIHBhcnRpY2lwYW50cyBhcmUgcmVzcG9uc2libGUgZm9yIGdvdmVybmluZyB0aGUgSURFUCBOZXR3b3JrLCB3aGljaCBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0ZWQgdG86IGZ1bmN0aW9uYWxpdHkKaW1wcm92ZW1lbnRzLCB0b2tlbm9taWNzLCBpbmZyYXN0cnVjdHVyZS4gQW55b25lIGNhbiBqb2luIHRoZSBlY29zeXN0ZW0gYW5kIGJlY29tZSBhbiBJREVQIGhvbGRlciB0byBoZWxwIHNoYXBlIHRoZSBmdXR1cmUKb2YgZGVjZW50cmFsaXplZCBkaWdpdGFsIG1lZGlhLiAgYCksbWR4KCJwIixudWxsLGBBbGwgdXNlcnMgY2FuIHN1Ym1pdCBwcm9wb3NhbHMgdG8gdGhlIERBTywgYW5kIGFsbCBgLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LGBJREVQYCksYCBob2xkZXJzIGFyZSBlbnRpdGxlZCB0byB2b3RpbmcgcmlnaHRzIGZvciBwcm9wb3NhbHMgdGhhdCBhcmUKcmVsZXZhbnQgdG8gdGhlbS5gKSxtZHgoImgzIix7ImlkIjoiZ2FsYWN0aWMtaW1wcm92ZW1lbnQtcHJvcG9zYWwtZ2lwIn0sYEdhbGFjdGljIEltcHJvdmVtZW50IFByb3Bvc2FsIChHSVApYCksbWR4KCJwIixudWxsLGBDb21tdW5pdHkgbWVtYmVycyBjYW4gc3VibWl0IHRoZWlyIHByb3Bvc2FscyB0byBpbXByb3ZlIHRoZSBvdmVyYWxsIGVjb3N5c3RlbSBkZXNpZ24gb2YgSURFUCwgc3VjaCBhcyBzdGFuZGFyZHMgaW1wcm92ZW1lbnQgcGxhbnMsIGNvbW11bml0eSBtb2R1bGVzLCBuZXcgYnJpZGdlcywgYW5kIGV0Yy5gKSxtZHgoImgzIix7ImlkIjoiZ2FsYWN0aWMtbWV0cmljcy1wcm9wb3NhbC1nbXAifSxgR2FsYWN0aWMgTWV0cmljcyBQcm9wb3NhbCAoR01QKWApLG1keCgicCIsbnVsbCxgQ29tbXVuaXR5IG1lbWJlcnMgY2FuIGRlY2lkZSB0aGUgbW9zdCBpbXBvcnRhbnQgbWV0cmljcyBvZiBJREVQIE5ldHdvcmsgYXMgd2VsbCBhcyBwcm9wb3NhbHMgY29uY2VybmluZyB0aGUgdG9rZW5vbWljcyBvZiB0aGUgbmV0d29yay4gRXhhbXBsZXMgb2YgdGhlIG1ldHJpY3MgaW5jbHVkZSBidXQgbm90IGxpbWl0ZWQgdG86YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgRmVlIHN0cnVjdHVyZWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBNaW50aW5nIHRva2Vuc2ApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBDcmVhdGluZyBuZXcgZ3JhbnQgcG9vbHNgKSksbWR4KCJoMiIseyJpZCI6InJvYWRtYXAifSxgUm9hZG1hcGApLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoicm9hZG1hcCIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS9Vc2Vycy9haWRhcy9EZXNrdG9wL0lERVAtRG9jcy9JREVQLURvY3Mvc3RhdGljL2ltZy9yb2FkbWFwX3BhcGVyLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJoMiIseyJpZCI6Imxvb2tpbmctYWhlYWQifSxgTG9va2luZyBBaGVhZGApLG1keCgicCIsbnVsbCxgVGhlIElERVAgTmV0d29yayBhaW1zIHRvIGJlY29tZSB0aGUgaW1wZXR1cyB0aGF0IGludHJvZHVjZXMgYW5kIHN0YW5kYXJkaXplcyBibG9ja2NoYWluIHRlY2hub2xvZ3kgaW4gdGhlIGRpZ2l0YWwgbWVkaWEgZG9tYWluLgpUaGUgSURFUCBGb3VuZGF0aW9u4oCZcyBjb21taXRtZW50IHdpbGwgbm90IHN0b3AgYXQgdGhlIGluaXRpYWwgZm91bmRhdGlvbmFsIG1vZHVsZXMgYW5kIHN0YW5kYXJkcy4gRnJvbSAzRCBpbmdhbWUgYXNzZXRzIHRvCm1lcmdpbmcgcGh5c2ljYWwgYW5kIGRpZ2l0YWwgYXNzZXRzIGludG8gYSBwZXJmZWN0IHVuaW9uLCB0aGUgdHJ1ZSBwb3RlbnRpYWwgb2YgSURFUCBpcyBlbmRsZXNzLiAgYCksbWR4KCJwIixudWxsLGBJREVQIE5ldHdvcmvigJlzIGFyY2hpdGVjdHVyZSBhbmQgaW1wbGVtZW50YXRpb24gaXMgc3RpbGwgdW5kZXJnb2luZyByYXBpZCBkZXZlbG9wbWVudCBhbmQgb3B0aW1pemF0aW9uLCB3aXRoIHF1ZXN0aW9ucyByZWdhcmRpbmcKd2hhdCBuZXcgbW9kdWxlcyB0byBjcmVhdGUsIHRvIHdoaWNoIGJyaWRnZSB3ZSBzaG91bGQgYnVpbGQgdG8gYmVzdCBoZWxwIHRoZSBuZXR3b3JrIGdyb3csIGFzIHdlbGwgYXMgdGhlIGZhc3Rlc3Qgd2F5IHRvCm9uYm9hcmQgbmV3IHByb2plY3RzIG9udG8gb3VyIExheWVyIDEuIEZvciB0aGF0IHJlYXNvbiwgd2UgaW52aXRlIGFsbCBjb21tdW5pdHkgbWVtYmVycyB0byBwcm9hY3RpdmVseSBpbml0aWF0ZSBwcm9wb3NhbHMKYW5kIHZvdGUgdG8gZnVydGhlciBvcHRpbWl6ZSBJREVQIGFuZCBidWlsZCBhIG1vcmUgcm9idXN0IGNvbW11bml0eSBhbmQgZWNvc3lzdGVtLmApLG1keCgiaHIiLG51bGwpLG1keCgicCIsbnVsbCxgVmVyc2lvbiAxLjAgIGApLG1keCgicCIsbnVsbCxgQXByaWwgMjAyMSAgYCksbWR4KCJociIsbnVsbCksbWR4KCJkaXYiLHsiY2xhc3NOYW1lIjoiYWRtb25pdGlvbiBhZG1vbml0aW9uLWNhdXRpb24gYWxlcnQgYWxlcnQtLXdhcm5pbmcifSxtZHgoImRpdiIse3BhcmVudE5hbWU6ImRpdiIsImNsYXNzTmFtZSI6ImFkbW9uaXRpb24taGVhZGluZyJ9LG1keCgiaDUiLHtwYXJlbnROYW1lOiJkaXYifSxtZHgoInNwYW4iLHtwYXJlbnROYW1lOiJoNSIsImNsYXNzTmFtZSI6ImFkbW9uaXRpb24taWNvbiJ9LG1keCgic3ZnIix7cGFyZW50TmFtZToic3BhbiIsInhtbG5zIjoiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJ3aWR0aCI6IjE2IiwiaGVpZ2h0IjoiMTYiLCJ2aWV3Qm94IjoiMCAwIDE2IDE2In0sbWR4KCJwYXRoIix7cGFyZW50TmFtZToic3ZnIiwiZmlsbFJ1bGUiOiJldmVub2RkIiwiZCI6Ik04Ljg5MyAxLjVjLS4xODMtLjMxLS41Mi0uNS0uODg3LS41cy0uNzAzLjE5LS44ODYuNUwuMTM4IDEzLjQ5OWEuOTguOTggMCAwIDAgMCAxLjAwMWMuMTkzLjMxLjUzLjUwMS44ODYuNTAxaDEzLjk2NGMuMzY3IDAgLjcwNC0uMTkuODc3LS41YTEuMDMgMS4wMyAwIDAgMCAuMDEtMS4wMDJMOC44OTMgMS41em0uMTMzIDExLjQ5N0g2Ljk4N3YtMi4wMDNoMi4wMzl2Mi4wMDN6bTAtMy4wMDRINi45ODdWNS45ODdoMi4wMzl2NC4wMDZ6In0pKSksYGNhdXRpb25gKSksbWR4KCJkaXYiLHtwYXJlbnROYW1lOiJkaXYiLCJjbGFzc05hbWUiOiJhZG1vbml0aW9uLWNvbnRlbnQifSxtZHgoInAiLHtwYXJlbnROYW1lOiJkaXYifSxgSURFUCBOZXR3b3JrIGlzIHVuZGVyIGhlYXZ5IGRldmVsb3BtZW50LCB0aGlzIExpdGVwYXBlciBsaWtlbHkgdG8gY2hhbmdlIGluIHRoZSBuZWFyIGZ1dHVyZSFgKSkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}