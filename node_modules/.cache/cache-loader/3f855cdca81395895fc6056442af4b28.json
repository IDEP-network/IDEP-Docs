{"remainingRequest":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","dependencies":[{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","mtime":1646592946217},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1646592944148},{"path":"/Users/aidas/Desktop/radek/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1646592944941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}