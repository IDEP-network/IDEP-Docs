{"remainingRequest":"/Users/aidas/Desktop/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/aidas/Desktop/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/ThemedImage/index.js","dependencies":[{"path":"/Users/aidas/Desktop/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/ThemedImage/index.js","mtime":1617909370753},{"path":"/Users/aidas/Desktop/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1617909358812},{"path":"/Users/aidas/Desktop/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1617909358745}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FpZGFzL0Rlc2t0b3AvSURFUC1Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnQgY2xzeCBmcm9tJ2Nsc3gnO2ltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZURvY3VzYXVydXNDb250ZXh0JztpbXBvcnQgdXNlVGhlbWVDb250ZXh0IGZyb20nQHRoZW1lL2hvb2tzL3VzZVRoZW1lQ29udGV4dCc7aW1wb3J0IHN0eWxlcyBmcm9tJy4vc3R5bGVzLm1vZHVsZS5jc3MnO2NvbnN0IFRoZW1lZEltYWdlPXByb3BzPT57Y29uc3R7aXNDbGllbnR9PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3R7aXNEYXJrVGhlbWV9PXVzZVRoZW1lQ29udGV4dCgpO2NvbnN0e3NvdXJjZXMsY2xhc3NOYW1lLGFsdD0nJywuLi5wcm9wc1Jlc3R9PXByb3BzO2NvbnN0IHJlbmRlcmVkU291cmNlTmFtZXM9aXNDbGllbnQ/aXNEYXJrVGhlbWU/WydkYXJrJ106WydsaWdodCddLy8gV2UgbmVlZCB0byByZW5kZXIgYm90aCBpbWFnZXMgb24gdGhlIHNlcnZlciB0byBhdm9pZCBmbGFzaAo6Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kb2N1c2F1cnVzL3B1bGwvMzczMApbJ2xpZ2h0JywnZGFyayddO3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwscmVuZGVyZWRTb3VyY2VOYW1lcy5tYXAoc291cmNlTmFtZT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImltZyIsX2V4dGVuZHMoe2tleTpzb3VyY2VOYW1lLHNyYzpzb3VyY2VzW3NvdXJjZU5hbWVdLGFsdDphbHQsY2xhc3NOYW1lOmNsc3goc3R5bGVzLnRoZW1lZEltYWdlLHN0eWxlc1tgdGhlbWVkSW1hZ2UtLSR7c291cmNlTmFtZX1gXSxjbGFzc05hbWUpfSxwcm9wc1Jlc3QpKSkpO307ZXhwb3J0IGRlZmF1bHQgVGhlbWVkSW1hZ2U7"},{"version":3,"sources":["/Users/aidas/Desktop/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/ThemedImage/index.js"],"names":["React","clsx","useDocusaurusContext","useThemeContext","styles","ThemedImage","props","isClient","isDarkTheme","sources","className","alt","propsRest","renderedSourceNames","map","sourceName","themedImage"],"mappings":"qGAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,KAAMC,CAAAA,WAAW,CAAIC,KAAD,EAAW,CAC7B,KAAM,CAACC,QAAD,EAAaL,oBAAoB,EAAvC,CACA,KAAM,CAACM,WAAD,EAAgBL,eAAe,EAArC,CACA,KAAM,CAACM,OAAD,CAAUC,SAAV,CAAqBC,GAAG,CAAG,EAA3B,CAA+B,GAAGC,SAAlC,EAA+CN,KAArD,CACA,KAAMO,CAAAA,mBAAmB,CAAGN,QAAQ,CAChCC,WAAW,CACT,CAAC,MAAD,CADS,CAET,CAAC,OAAD,CAAU;AAHoB,CAIhC;AACA,CAAC,OAAD,CAAU,MAAV,CALJ,CAMA,mBACE,wCACGK,mBAAmB,CAACC,GAApB,CAAyBC,UAAD,eACvB,oCACE,GAAG,CAAEA,UADP,CAEE,GAAG,CAAEN,OAAO,CAACM,UAAD,CAFd,CAGE,GAAG,CAAEJ,GAHP,CAIE,SAAS,CAAEV,IAAI,CACbG,MAAM,CAACY,WADM,CAEbZ,MAAM,CAAE,gBAAeW,UAAW,EAA5B,CAFO,CAGbL,SAHa,CAJjB,EASME,SATN,EADD,CADH,CADF,CAiBD,CA3BD,CA6BA,cAAeP,CAAAA,WAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\nimport styles from './styles.module.css';\n\nconst ThemedImage = (props) => {\n  const {isClient} = useDocusaurusContext();\n  const {isDarkTheme} = useThemeContext();\n  const {sources, className, alt = '', ...propsRest} = props;\n  const renderedSourceNames = isClient\n    ? isDarkTheme\n      ? ['dark']\n      : ['light'] // We need to render both images on the server to avoid flash\n    : // See https://github.com/facebook/docusaurus/pull/3730\n      ['light', 'dark'];\n  return (\n    <>\n      {renderedSourceNames.map((sourceName) => (\n        <img\n          key={sourceName}\n          src={sources[sourceName]}\n          alt={alt}\n          className={clsx(\n            styles.themedImage,\n            styles[`themedImage--${sourceName}`],\n            className,\n          )}\n          {...propsRest}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default ThemedImage;\n"]}]}