{"remainingRequest":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","mtime":1630332973197},{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/cache-loader/dist/cjs.js","mtime":1630332960938},{"path":"/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/babel-loader/lib/index.js","mtime":1630332960875}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FpZGFzL0Rlc2t0b3AvTGF0ZXN0LURvY3MvSURFUC1Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydCBSZWFjdCx7dXNlRWZmZWN0LHVzZVN0YXRlLHVzZVJlZn1mcm9tJ3JlYWN0JztpbXBvcnQgY2xzeCBmcm9tJ2Nsc3gnO2ltcG9ydCBIaWdobGlnaHQse2RlZmF1bHRQcm9wc31mcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyJztpbXBvcnQgY29weSBmcm9tJ2NvcHktdGV4dC10by1jbGlwYm9hcmQnO2ltcG9ydCByYW5nZVBhcnNlciBmcm9tJ3BhcnNlLW51bWVyaWMtcmFuZ2UnO2ltcG9ydCB1c2VQcmlzbVRoZW1lIGZyb20nQHRoZW1lL2hvb2tzL3VzZVByaXNtVGhlbWUnO2ltcG9ydCBUcmFuc2xhdGUse3RyYW5zbGF0ZX1mcm9tJ0Bkb2N1c2F1cnVzL1RyYW5zbGF0ZSc7aW1wb3J0IHN0eWxlcyBmcm9tJy4vc3R5bGVzLm1vZHVsZS5jc3MnO2ltcG9ydHt1c2VUaGVtZUNvbmZpZ31mcm9tJ0Bkb2N1c2F1cnVzL3RoZW1lLWNvbW1vbic7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87Y29uc3QgZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXg9KGxhbmd1YWdlcz1bJ2pzJywnanNCbG9jaycsJ2pzeCcsJ3B5dGhvbicsJ2h0bWwnXSk9PnsvLyBzdXBwb3J0ZWQgdHlwZXMgb2YgY29tbWVudHMKY29uc3QgY29tbWVudHM9e2pzOntzdGFydDonXFwvXFwvJyxlbmQ6Jyd9LGpzQmxvY2s6e3N0YXJ0OidcXC9cXConLGVuZDonXFwqXFwvJ30sanN4OntzdGFydDonXFx7XFxzKlxcL1xcKicsZW5kOidcXCpcXC9cXHMqXFx9J30scHl0aG9uOntzdGFydDonIycsZW5kOicnfSxodG1sOntzdGFydDonPCEtLScsZW5kOictLT4nfX07Ly8gc3VwcG9ydGVkIGRpcmVjdGl2ZXMKY29uc3QgZGlyZWN0aXZlcz1bJ2hpZ2hsaWdodC1uZXh0LWxpbmUnLCdoaWdobGlnaHQtc3RhcnQnLCdoaWdobGlnaHQtZW5kJ10uam9pbignfCcpOy8vIHRvIGJlIG1vcmUgcmVsaWFibGUsIHRoZSBvcGVuaW5nIGFuZCBjbG9zaW5nIGNvbW1lbnQgbXVzdCBtYXRjaApjb25zdCBjb21tZW50UGF0dGVybj1sYW5ndWFnZXMubWFwKGxhbmc9PmAoPzoke2NvbW1lbnRzW2xhbmddLnN0YXJ0fVxccyooJHtkaXJlY3RpdmVzfSlcXHMqJHtjb21tZW50c1tsYW5nXS5lbmR9KWApLmpvaW4oJ3wnKTsvLyB3aGl0ZSBzcGFjZSBpcyBhbGxvd2VkLCBidXQgb3RoZXJ3aXNlIGl0IHNob3VsZCBiZSBvbiBpdCdzIG93biBsaW5lCnJldHVybiBuZXcgUmVnRXhwKGBeXFxzKig/OiR7Y29tbWVudFBhdHRlcm59KVxccyokYCk7fTsvLyBzZWxlY3QgY29tbWVudCBzdHlsZXMgYmFzZWQgb24gbGFuZ3VhZ2UKY29uc3QgaGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXg9bGFuZz0+e3N3aXRjaChsYW5nKXtjYXNlJ2pzJzpjYXNlJ2phdmFzY3JpcHQnOmNhc2UndHMnOmNhc2UndHlwZXNjcmlwdCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJ10pO2Nhc2UnanN4JzpjYXNlJ3RzeCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJywnanN4J10pO2Nhc2UnaHRtbCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJywnaHRtbCddKTtjYXNlJ3B5dGhvbic6Y2FzZSdweSc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsncHl0aG9uJ10pO2RlZmF1bHQ6Ly8gYWxsIGNvbW1lbnQgdHlwZXMKcmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KCk7fX07Y29uc3QgY29kZUJsb2NrVGl0bGVSZWdleD0vKD86dGl0bGU9IikoLiopKD86IikvO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvZGVCbG9jayh7Y2hpbGRyZW4sY2xhc3NOYW1lOmxhbmd1YWdlQ2xhc3NOYW1lLG1ldGFzdHJpbmd9KXtjb25zdHtwcmlzbX09dXNlVGhlbWVDb25maWcoKTtjb25zdFtzaG93Q29waWVkLHNldFNob3dDb3BpZWRdPXVzZVN0YXRlKGZhbHNlKTtjb25zdFttb3VudGVkLHNldE1vdW50ZWRdPXVzZVN0YXRlKGZhbHNlKTsvLyBUaGUgUHJpc20gdGhlbWUgb24gU1NSIGlzIGFsd2F5cyB0aGUgZGVmYXVsdCB0aGVtZSBidXQgdGhlIHNpdGUgdGhlbWUKLy8gY2FuIGJlIGluIGEgZGlmZmVyZW50IG1vZGUuIFJlYWN0IGh5ZHJhdGlvbiBkb2Vzbid0IHVwZGF0ZSBET00gc3R5bGVzCi8vIHRoYXQgY29tZSBmcm9tIFNTUi4gSGVuY2UgZm9yY2UgYSByZS1yZW5kZXIgYWZ0ZXIgbW91bnRpbmcgdG8gYXBwbHkgdGhlCi8vIGN1cnJlbnQgcmVsZXZhbnQgc3R5bGVzLiBUaGVyZSB3aWxsIGJlIGEgZmxhc2ggc2VlbiBvZiB0aGUgb3JpZ2luYWwKLy8gc3R5bGVzIHNlZW4gdXNpbmcgdGhpcyBjdXJyZW50IGFwcHJvYWNoIGJ1dCB0aGF0J3MgcHJvYmFibHkgb2suIEZpeGluZwovLyB0aGUgZmxhc2ggd2lsbCByZXF1aXJlIGNoYW5naW5nIHRoZSB0aGVtaW5nIGFwcHJvYWNoIGFuZCBpcyBub3Qgd29ydGggaXQKLy8gYXQgdGhpcyBwb2ludC4KdXNlRWZmZWN0KCgpPT57c2V0TW91bnRlZCh0cnVlKTt9LFtdKTtjb25zdCBidXR0b249dXNlUmVmKG51bGwpO2xldCBoaWdobGlnaHRMaW5lcz1bXTtsZXQgY29kZUJsb2NrVGl0bGU9Jyc7Y29uc3QgcHJpc21UaGVtZT11c2VQcmlzbVRoZW1lKCk7Ly8gSW4gY2FzZSBpbnRlcmxlYXZlZCBNYXJrZG93biAoZS5nLiB3aGVuIHVzaW5nIENvZGVCbG9jayBhcyBzdGFuZGFsb25lIGNvbXBvbmVudCkuCmNvbnN0IGNvbnRlbnQ9QXJyYXkuaXNBcnJheShjaGlsZHJlbik/Y2hpbGRyZW4uam9pbignJyk6Y2hpbGRyZW47aWYobWV0YXN0cmluZyYmaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4LnRlc3QobWV0YXN0cmluZykpey8vIFRlc3RlZCBhYm92ZQovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgpjb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlPW1ldGFzdHJpbmcubWF0Y2goaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4KVsxXTtoaWdobGlnaHRMaW5lcz1yYW5nZVBhcnNlcihoaWdobGlnaHRMaW5lc1JhbmdlKS5maWx0ZXIobj0+bj4wKTt9aWYobWV0YXN0cmluZyYmY29kZUJsb2NrVGl0bGVSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXsvLyBUZXN0ZWQgYWJvdmUKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24KY29kZUJsb2NrVGl0bGU9bWV0YXN0cmluZy5tYXRjaChjb2RlQmxvY2tUaXRsZVJlZ2V4KVsxXTt9bGV0IGxhbmd1YWdlPWxhbmd1YWdlQ2xhc3NOYW1lJiYvLyBGb3JjZSBQcmlzbSdzIGxhbmd1YWdlIHVuaW9uIHR5cGUgdG8gYGFueWAgYmVjYXVzZSBpdCBkb2VzIG5vdCBjb250YWluIGFsbCBhdmFpbGFibGUgbGFuZ3VhZ2VzCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55Cmxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sJycpO2lmKCFsYW5ndWFnZSYmcHJpc20uZGVmYXVsdExhbmd1YWdlKXtsYW5ndWFnZT1wcmlzbS5kZWZhdWx0TGFuZ3VhZ2U7fS8vIG9ubHkgZGVjbGFyYXRpb24gT1IgZGlyZWN0aXZlIGhpZ2hsaWdodCBjYW4gYmUgdXNlZCBmb3IgYSBibG9jawpsZXQgY29kZT1jb250ZW50LnJlcGxhY2UoL1xuJC8sJycpO2lmKGhpZ2hsaWdodExpbmVzLmxlbmd0aD09PTAmJmxhbmd1YWdlIT09dW5kZWZpbmVkKXtsZXQgcmFuZ2U9Jyc7Y29uc3QgZGlyZWN0aXZlUmVnZXg9aGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgobGFuZ3VhZ2UpOy8vIGdvIHRocm91Z2ggbGluZSBieSBsaW5lCmNvbnN0IGxpbmVzPWNvbnRlbnQucmVwbGFjZSgvXG4kLywnJykuc3BsaXQoJ1xuJyk7bGV0IGJsb2NrU3RhcnQ7Ly8gbG9vcCB0aHJvdWdoIGxpbmVzCmZvcihsZXQgaW5kZXg9MDtpbmRleDxsaW5lcy5sZW5ndGg7KXtjb25zdCBsaW5lPWxpbmVzW2luZGV4XTsvLyBhZGp1c3QgZm9yIDAtaW5kZXgKY29uc3QgbGluZU51bWJlcj1pbmRleCsxO2NvbnN0IG1hdGNoPWxpbmUubWF0Y2goZGlyZWN0aXZlUmVnZXgpO2lmKG1hdGNoIT09bnVsbCl7Y29uc3QgZGlyZWN0aXZlPW1hdGNoLnNsaWNlKDEpLnJlZHVjZSgoZmluYWwsaXRlbSk9PmZpbmFsfHxpdGVtLHVuZGVmaW5lZCk7c3dpdGNoKGRpcmVjdGl2ZSl7Y2FzZSdoaWdobGlnaHQtbmV4dC1saW5lJzpyYW5nZSs9YCR7bGluZU51bWJlcn0sYDticmVhaztjYXNlJ2hpZ2hsaWdodC1zdGFydCc6YmxvY2tTdGFydD1saW5lTnVtYmVyO2JyZWFrO2Nhc2UnaGlnaGxpZ2h0LWVuZCc6cmFuZ2UrPWAke2Jsb2NrU3RhcnR9LSR7bGluZU51bWJlci0xfSxgO2JyZWFrO2RlZmF1bHQ6YnJlYWs7fWxpbmVzLnNwbGljZShpbmRleCwxKTt9ZWxzZXsvLyBsaW5lcyB3aXRob3V0IGRpcmVjdGl2ZXMgYXJlIHVuY2hhbmdlZAppbmRleCs9MTt9fWhpZ2hsaWdodExpbmVzPXJhbmdlUGFyc2VyKHJhbmdlKTtjb2RlPWxpbmVzLmpvaW4oJ1xuJyk7fWNvbnN0IGhhbmRsZUNvcHlDb2RlPSgpPT57Y29weShjb2RlKTtzZXRTaG93Q29waWVkKHRydWUpO3NldFRpbWVvdXQoKCk9PnNldFNob3dDb3BpZWQoZmFsc2UpLDIwMDApO307cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSGlnaGxpZ2h0LF9leHRlbmRzKHt9LGRlZmF1bHRQcm9wcyx7a2V5OlN0cmluZyhtb3VudGVkKSx0aGVtZTpwcmlzbVRoZW1lLGNvZGU6Y29kZSxsYW5ndWFnZTpsYW5ndWFnZX0pLCh7Y2xhc3NOYW1lLHN0eWxlLHRva2VucyxnZXRMaW5lUHJvcHMsZ2V0VG9rZW5Qcm9wc30pPT4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tDb250YWluZXJ9LGNvZGVCbG9ja1RpdGxlJiYvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7c3R5bGU6c3R5bGUsY2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tUaXRsZX0sY29kZUJsb2NrVGl0bGUpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Y2xzeChzdHlsZXMuY29kZUJsb2NrQ29udGVudCxsYW5ndWFnZSl9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHsvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvbm8tbm9uaW50ZXJhY3RpdmUtdGFiaW5kZXggKi90YWJJbmRleDowLGNsYXNzTmFtZTpjbHN4KGNsYXNzTmFtZSxzdHlsZXMuY29kZUJsb2NrLCd0aGluLXNjcm9sbGJhcicse1tzdHlsZXMuY29kZUJsb2NrV2l0aFRpdGxlXTpjb2RlQmxvY2tUaXRsZX0pfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tMaW5lcyxzdHlsZTpzdHlsZX0sdG9rZW5zLm1hcCgobGluZSxpKT0+e2lmKGxpbmUubGVuZ3RoPT09MSYmbGluZVswXS5jb250ZW50PT09Jycpe2xpbmVbMF0uY29udGVudD0nXG4nOy8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KfWNvbnN0IGxpbmVQcm9wcz1nZXRMaW5lUHJvcHMoe2xpbmUsa2V5Oml9KTtpZihoaWdobGlnaHRMaW5lcy5pbmNsdWRlcyhpKzEpKXtsaW5lUHJvcHMuY2xhc3NOYW1lPWAke2xpbmVQcm9wcy5jbGFzc05hbWV9IGRvY3VzYXVydXMtaGlnaGxpZ2h0LWNvZGUtbGluZWA7fXJldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLF9leHRlbmRzKHtrZXk6aX0sbGluZVByb3BzKSxsaW5lLm1hcCgodG9rZW4sa2V5KT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLF9leHRlbmRzKHtrZXk6a2V5fSxnZXRUb2tlblByb3BzKHt0b2tlbixrZXl9KSkpKSk7fSkpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7cmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjp0cmFuc2xhdGUoe2lkOid0aGVtZS5Db2RlQmxvY2suY29weUJ1dHRvbkFyaWFMYWJlbCcsbWVzc2FnZTonQ29weSBjb2RlIHRvIGNsaXBib2FyZCcsZGVzY3JpcHRpb246J1RoZSBBUklBIGxhYmVsIGZvciBjb3B5IGNvZGUgYmxvY2tzIGJ1dHRvbid9KSxjbGFzc05hbWU6Y2xzeChzdHlsZXMuY29weUJ1dHRvbiksb25DbGljazpoYW5kbGVDb3B5Q29kZX0sc2hvd0NvcGllZD8vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2xhdGUse2lkOiJ0aGVtZS5Db2RlQmxvY2suY29waWVkIixkZXNjcmlwdGlvbjoiVGhlIGNvcGllZCBidXR0b24gbGFiZWwgb24gY29kZSBibG9ja3MifSwiQ29waWVkIik6LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLHtpZDoidGhlbWUuQ29kZUJsb2NrLmNvcHkiLGRlc2NyaXB0aW9uOiJUaGUgY29weSBidXR0b24gbGFiZWwgb24gY29kZSBibG9ja3MifSwiQ29weSIpKSkpKTt9"},{"version":3,"sources":["/Users/aidas/Desktop/Latest-Docs/IDEP-Docs/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","clsx","Highlight","defaultProps","copy","rangeParser","usePrismTheme","Translate","translate","styles","useThemeConfig","highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","CodeBlock","children","className","languageClassName","metastring","prism","showCopied","setShowCopied","mounted","setMounted","button","highlightLines","codeBlockTitle","prismTheme","content","Array","isArray","test","highlightLinesRange","match","filter","n","language","replace","defaultLanguage","code","length","undefined","range","directiveRegex","lines","split","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","setTimeout","String","style","tokens","getLineProps","getTokenProps","codeBlockContainer","codeBlockContent","codeBlock","codeBlockWithTitle","codeBlockLines","i","lineProps","key","includes","token","id","message","description","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useEffect, useState, useRef} from 'react';\nimport clsx from 'clsx';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport copy from 'copy-text-to-clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport usePrismTheme from '@theme/hooks/usePrismTheme';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport styles from './styles.module.css';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nconst getHighlightDirectiveRegex = (\n  languages = ['js', 'jsBlock', 'jsx', 'python', 'html'],\n) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: '',\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/',\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}',\n    },\n    python: {\n      start: '#',\n      end: '',\n    },\n    html: {\n      start: '<!--',\n      end: '-->',\n    },\n  }; // supported directives\n\n  const directives = [\n    'highlight-next-line',\n    'highlight-start',\n    'highlight-end',\n  ].join('|'); // to be more reliable, the opening and closing comment must match\n\n  const commentPattern = languages\n    .map(\n      (lang) =>\n        `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`,\n    )\n    .join('|'); // white space is allowed, but otherwise it should be on it's own line\n\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n}; // select comment styles based on language\n\nconst highlightDirectiveRegex = (lang) => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\n\nconst codeBlockTitleRegex = /(?:title=\")(.*)(?:\")/;\nexport default function CodeBlock({\n  children,\n  className: languageClassName,\n  metastring,\n}) {\n  const {prism} = useThemeConfig();\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false); // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n  const prismTheme = usePrismTheme(); // In case interleaved Markdown (e.g. when using CodeBlock as standalone component).\n\n  const content = Array.isArray(children) ? children.join('') : children;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser(highlightLinesRange).filter((n) => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    codeBlockTitle = metastring.match(codeBlockTitleRegex)[1];\n  }\n\n  let language =\n    languageClassName && // Force Prism's language union type to `any` because it does not contain all available languages\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  } // only declaration OR directive highlight can be used for a block\n\n  let code = content.replace(/\\n$/, '');\n\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language); // go through line by line\n\n    const lines = content.replace(/\\n$/, '').split('\\n');\n    let blockStart; // loop through lines\n\n    for (let index = 0; index < lines.length; ) {\n      const line = lines[index]; // adjust for 0-index\n\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n\n      if (match !== null) {\n        const directive = match\n          .slice(1)\n          .reduce((final, item) => final || item, undefined);\n\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n\n    highlightLines = rangeParser(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    copy(code);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={String(mounted)}\n      theme={prismTheme}\n      code={code}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <div className={styles.codeBlockContainer}>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={clsx(styles.codeBlockContent, language)}>\n            <div\n              /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */\n              tabIndex={0}\n              className={clsx(className, styles.codeBlock, 'thin-scrollbar', {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({\n                    line,\n                    key: i,\n                  });\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span\n                          key={key}\n                          {...getTokenProps({\n                            token,\n                            key,\n                          })}\n                        />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label={translate({\n                id: 'theme.CodeBlock.copyButtonAriaLabel',\n                message: 'Copy code to clipboard',\n                description: 'The ARIA label for copy code blocks button',\n              })}\n              className={clsx(styles.copyButton)}\n              onClick={handleCopyCode}>\n              {showCopied ? (\n                <Translate\n                  id=\"theme.CodeBlock.copied\"\n                  description=\"The copied button label on code blocks\">\n                  Copied\n                </Translate>\n              ) : (\n                <Translate\n                  id=\"theme.CodeBlock.copy\"\n                  description=\"The copy button label on code blocks\">\n                  Copy\n                </Translate>\n              )}\n            </button>\n          </div>\n        </div>\n      )}\n    </Highlight>\n  );\n}\n"]}]}