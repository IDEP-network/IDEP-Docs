(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{103:function(e,r,n){"use strict";n.d(r,"a",(function(){return u})),n.d(r,"b",(function(){return y}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),l=function(e){var r=a.a.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},u=function(e){var r=l(e.components);return a.a.createElement(d.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),b=t,y=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return n?a.a.createElement(y,s(s({ref:r},d),{},{components:n})):a.a.createElement(y,s({ref:r},d))}));function y(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},91:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return s})),n.d(r,"metadata",(function(){return c})),n.d(r,"toc",(function(){return d})),n.d(r,"default",(function(){return u}));var t=n(3),a=n(7),o=(n(0),n(103)),i=["components"],s={title:"Keys"},c={unversionedId:"Keys",id:"Keys",isDocsHomePage:!1,title:"Keys",description:"Helpful commands for validators regarding keys",source:"@site/docs/Keys.md",slug:"/Keys",permalink:"/Keys",editUrl:"https://github.com/IDEP-network/IDEP-Docs/docs/Keys.md",version:"current",sidebar:"docs",previous:{title:"Joining IDEP's Public Testnet Denali",permalink:"/Denali"},next:{title:"References",permalink:"/References"}},d=[{value:"Helpful commands for validators regarding keys",id:"helpful-commands-for-validators-regarding-keys",children:[]},{value:"Account:",id:"account",children:[{value:"Generate new keys",id:"generate-new-keys",children:[]},{value:"Show all your available keys:",id:"show-all-your-available-keys",children:[]},{value:"Recover keys with mnemonic seed phrase:",id:"recover-keys-with-mnemonic-seed-phrase",children:[]}]},{value:"Validator:",id:"validator",children:[{value:"Generate new validator keys:",id:"generate-new-validator-keys",children:[]},{value:"Show your nodes validator consensus address:",id:"show-your-nodes-validator-consensus-address",children:[]},{value:"Show your nodes validator pubkey:",id:"show-your-nodes-validator-pubkey",children:[]},{value:"Show your nodes validator <em>operators</em> address:",id:"show-your-nodes-validator-operators-address",children:[]}]}],l={toc:d};function u(e){var r=e.components,n=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(t.a)({},l,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"helpful-commands-for-validators-regarding-keys"},"Helpful commands for validators regarding keys"),Object(o.b)("br",null),Object(o.b)("h2",{id:"account"},"Account:"),Object(o.b)("h3",{id:"generate-new-keys"},"Generate new keys"),Object(o.b)("p",null,"You need an account private and public key pair to be able to receive funds, send txs, bond tx, etc."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond keys add <account_name>\n")),Object(o.b)("h3",{id:"show-all-your-available-keys"},"Show all your available keys:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond keys list\n")),Object(o.b)("h3",{id:"recover-keys-with-mnemonic-seed-phrase"},"Recover keys with mnemonic seed phrase:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond keys add <account_name> --recover\n")),Object(o.b)("h2",{id:"validator"},"Validator:"),Object(o.b)("h3",{id:"generate-new-validator-keys"},"Generate new validator keys:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond tx staking create-validator --amount <amount> --from <accAddress> --pubkey $(iond tendermint show-validator) --commission-rate <rate> --commission-max-rate <rate> --commission-max-change-rate <rate> --min-self-delegation <min-self-delegation-amount> --chain-id Test-Denali\n")),Object(o.b)("h3",{id:"show-your-nodes-validator-consensus-address"},"Show your nodes validator consensus address:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond tendermint show-address\n")),Object(o.b)("h3",{id:"show-your-nodes-validator-pubkey"},"Show your nodes validator pubkey:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond tendermint show-validator\n")),Object(o.b)("h3",{id:"show-your-nodes-validator-operators-address"},"Show your nodes validator ",Object(o.b)("em",{parentName:"h3"},"operators")," address:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"iond keys show <key address> --bech val\n")))}u.isMDXComponent=!0}}]);