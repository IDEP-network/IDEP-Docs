"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[326],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,g=p["".concat(i,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(g,l(l({ref:t},d),{},{components:n})):r.createElement(g,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4321:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],s={title:"Prepare your Hardware"},i=void 0,u={unversionedId:"Validators/setup-sgx",id:"Validators/setup-sgx",title:"Prepare your Hardware",description:"Ensure your hardware is IDEP Node Compliant.",source:"@site/docs/Validators/setup-sgx.md",sourceDirName:"Validators",slug:"/Validators/setup-sgx",permalink:"/docs/Validators/setup-sgx",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Validators/setup-sgx.md",tags:[],version:"current",frontMatter:{title:"Prepare your Hardware"},sidebar:"Docs",previous:{title:"VPS Compliance",permalink:"/docs/Validators/vps-compliance"},next:{title:"Run Full Node",permalink:"/docs/Validators/run-full-node"}},d={},c=[{value:"SGX Installation",id:"sgx-installation",level:2},{value:"For Node Runners",id:"for-node-runners",level:3},{value:"Testing your SGX setup",id:"testing-your-sgx-setup",level:2},{value:"Run <code>secretd init-enclave</code>",id:"run-secretd-init-enclave",level:3},{value:"Uninstall",id:"uninstall",level:2},{value:"Refs",id:"refs",level:2},{value:"Contributers",id:"contributers",level:4}],p={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Ensure your hardware is ",(0,o.kt)("a",{parentName:"p",href:"/docs/Validators/hardware-compliance"},"IDEP Node Compliant"),"."),(0,o.kt)("p",null,"If you're running a local machine and not a cloud-based VM -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to your BIOS menu"),(0,o.kt)("li",{parentName:"ol"},"Enable SGX (Software controlled is not enough)"),(0,o.kt)("li",{parentName:"ol"},"Disable Secure Boot"),(0,o.kt)("li",{parentName:"ol"},"Disable Hyperthreading (recommended)")),(0,o.kt)("h2",{id:"sgx-installation"},"SGX Installation"),(0,o.kt)("h3",{id:"for-node-runners"},"For Node Runners"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Note: ",(0,o.kt)("inlineCode",{parentName:"p"},"sgx_linux_x64_driver_2.11.0_2d2b795.bin")," is the latest driver as of August 24th, 2021. Please check under ",(0,o.kt)("a",{parentName:"p",href:"https://download.01.org/intel-sgx/sgx-linux/"},"https://download.01.org/intel-sgx/sgx-linux/")," that this is still the case. If not, please send us a PR or notify us."),(0,o.kt)("p",null,"If you are a node runner all you must do to install SGX is to save this as a script and run it."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Download the sgx install script.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"wget https://raw.githubusercontent.com/SecretFoundation/docs/main/docs/node-guides/sgx\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Execute the script.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo bash sgx\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Copy of raw script.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'#! /bin/bash\nsudo apt-get update && sudo apt upgrade -y\nsudo apt-get install make build-essential gcc git jq chrony -y\n\nUBUNTUVERSION=$(lsb_release -r -s | cut -d \'.\' -f 1)\nPSW_PACKAGES=\'libsgx-enclave-common libsgx-urts sgx-aesm-service libsgx-uae-service autoconf libtool make gcc\'\n\nif (($UBUNTUVERSION < 16)); then\necho "Your version of Ubuntu is not supported. Must have Ubuntu 16.04 and up. Aborting installation script..."\nexit 1\nelif (($UBUNTUVERSION == 16)); then\nDISTRO=\'xenial\'\nOS=\'ubuntu16.04-server\'\nelif (($UBUNTUVERSION == 18)); then\nDISTRO=\'bionic\'\nOS=\'ubuntu18.04-server\'\nelif (($UBUNTUVERSION == 20)); then\nDISTRO=\'focal\'\nOS=\'ubuntu20.04-server\'\nfi\n\necho "\\n\\n###############################################"\necho "#####       Installing Intel SGX driver       #####"\necho "###############################################\\n\\n"\n\n# Download SGX driver\nif (($UBUNTUVERSION == 16)); then\n# Ubuntu 16 was deprecated by the latest Intel SGX drivers\nwget "https://download.01.org/intel-sgx/sgx-linux/2.13/distro/${OS}/sgx_linux_x64_driver_2.11.0_0373e2e.bin"\nelse\nwget "https://download.01.org/intel-sgx/sgx-linux/2.14/distro/${OS}/sgx_linux_x64_driver_2.11.0_2d2b795.bin"\nfi\n\n# Make the driver installer executable\nchmod +x ./sgx_linux_x64_driver_*.bin\n\n# Install the driver\nsudo ./sgx_linux_x64_driver_*.bin\n\n# Remount /dev as exec, also at system startup\nsudo tee /etc/systemd/system/remount-dev-exec.service >/dev/null <<EOF\n[Unit]\nDescription=Remount /dev as exec to allow AESM service to boot and load enclaves into SGX\n\n[Service]\nType=oneshot\nExecStart=/bin/mount -o remount,exec /dev\nRemainAfterExit=true\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl enable remount-dev-exec\nsudo systemctl start remount-dev-exec\n\necho "\\n\\n###############################################"\necho "#####       Installing Intel SGX PSW          #####"\necho "###############################################\\n\\n"\n\n# Add Intels\'s SGX PPA\necho "deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu $DISTRO main" |\nsudo tee /etc/apt/sources.list.d/intel-sgx.list\nwget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key |\nsudo apt-key add -\nsudo apt update\n\n# Install libprotobuf\nif (($UBUNTUVERSION > 18)); then\nsudo apt install -y gdebi\n# Install all the additional necessary dependencies (besides the driver and the SDK)\n# for building a rust enclave\nwget -O /tmp/libprotobuf30_3.19.4-1_amd64.deb https://engfilestorage.blob.core.windows.net/filestorage/libprotobuf30_3.19.4-1_amd64.deb\nyes | sudo gdebi /tmp/libprotobuf30_3.19.4-1_amd64.deb\nelse\nPSW_PACKAGES+=\' libprotobuf-dev\'\nfi\n\nsudo apt install -y $PSW_PACKAGES\n')),(0,o.kt)("h2",{id:"testing-your-sgx-setup"},"Testing your SGX setup"),(0,o.kt)("h3",{id:"run-secretd-init-enclave"},"Run ",(0,o.kt)("inlineCode",{parentName:"h3"},"secretd init-enclave")),(0,o.kt)("p",null,"See Verify SGX for a guide how to test your setup."),(0,o.kt)("h2",{id:"uninstall"},"Uninstall"),(0,o.kt)("p",null,"To uninstall the Intel(R) SGX Driver, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo /opt/intel/sgxdriver/uninstall.sh\n")),(0,o.kt)("p",null,"The above command produces no output when it succeeds. If you want to verify that the driver has been uninstalled, you can run the following, which should print ",(0,o.kt)("inlineCode",{parentName:"p"},"SGX Driver NOT installed"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'ls /dev/isgx &>/dev/null && echo "SGX Driver installed" || echo "SGX Driver NOT installed"\n')),(0,o.kt)("p",null,"To uninstall the SGX SDK, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo "$HOME"/.sgxsdk/sgxsdk/uninstall.sh\nrm -rf "$HOME/.sgxsdk"\n')),(0,o.kt)("p",null,"To uninstall the rest of the dependencies, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt purge -y libsgx-enclave-common libsgx-enclave-common-dev libsgx-urts sgx-aesm-service libsgx-uae-service libsgx-launch libsgx-aesm-launch-plugin libsgx-ae-le\n")),(0,o.kt)("h2",{id:"refs"},"Refs"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-teaclave-sgx-sdk/wiki/Environment-Setup"},"https://github.com/apache/incubator-teaclave-sgx-sdk/wiki/Environment-Setup"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/openenclave/openenclave/blob/master/docs/GettingStartedDocs/install_oe_sdk-Ubuntu_18.04.md"},"https://github.com/openenclave/openenclave/blob/master/docs/GettingStartedDocs/install_oe_sdk-Ubuntu_18.04.md"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-teaclave-sgx-sdk/blob/783f04c002e243d1022c5af8a982f9c2a7138f32/dockerfile/Dockerfile.1804.nightly"},"https://github.com/apache/incubator-teaclave-sgx-sdk/blob/783f04c002e243d1022c5af8a982f9c2a7138f32/dockerfile/Dockerfile.1804.nightly"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://edp.fortanix.com/docs/installation/guide/"},"https://edp.fortanix.com/docs/installation/guide/")),(0,o.kt)("h4",{id:"contributers"},"Contributers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"FreshSCRT"),(0,o.kt)("li",{parentName:"ul"},"secretnodes"),(0,o.kt)("li",{parentName:"ul"},"Lavender.Five")))}m.isMDXComponent=!0}}]);