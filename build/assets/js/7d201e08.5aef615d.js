"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7524],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return y}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),d=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(t),y=o,m=p["".concat(l,".").concat(y)]||p[y]||c[y]||a;return t?n.createElement(m,s(s({ref:r},u),{},{components:t})):n.createElement(m,s({ref:r},u))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=p;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var d=2;d<a;d++)s[d]=t[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6102:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return c}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={title:"Keys"},l=void 0,d={unversionedId:"Guides/Keys",id:"Guides/Keys",title:"Keys",description:"Helpful commands for validators regarding keys",source:"@site/docs/Guides/Keys.md",sourceDirName:"Guides",slug:"/Guides/Keys",permalink:"/docs/Guides/Keys",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Guides/Keys.md",tags:[],version:"current",frontMatter:{title:"Keys"},sidebar:"Docs",previous:{title:"Joining IDEP's Public Testnet Denali",permalink:"/docs/Guides/Denali"},next:{title:"References",permalink:"/docs/Resources/References"}},u={},c=[{value:"Helpful commands for validators regarding keys",id:"helpful-commands-for-validators-regarding-keys",level:2},{value:"Account:",id:"account",level:2},{value:"Generate new keys",id:"generate-new-keys",level:3},{value:"Show all your available keys:",id:"show-all-your-available-keys",level:3},{value:"Recover keys with mnemonic seed phrase:",id:"recover-keys-with-mnemonic-seed-phrase",level:3},{value:"Validator:",id:"validator",level:2},{value:"Generate new validator keys:",id:"generate-new-validator-keys",level:3},{value:"Show your nodes validator consensus address:",id:"show-your-nodes-validator-consensus-address",level:3},{value:"Show your nodes validator pubkey:",id:"show-your-nodes-validator-pubkey",level:3},{value:"Show your nodes validator <em>operators</em> address:",id:"show-your-nodes-validator-operators-address",level:3}],p={toc:c};function y(e){var r=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"helpful-commands-for-validators-regarding-keys"},"Helpful commands for validators regarding keys"),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"account"},"Account:"),(0,a.kt)("h3",{id:"generate-new-keys"},"Generate new keys"),(0,a.kt)("p",null,"You need an account private and public key pair to be able to receive funds, send txs, bond tx, etc."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond keys add <account_name>\n")),(0,a.kt)("h3",{id:"show-all-your-available-keys"},"Show all your available keys:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond keys list\n")),(0,a.kt)("h3",{id:"recover-keys-with-mnemonic-seed-phrase"},"Recover keys with mnemonic seed phrase:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond keys add <account_name> --recover\n")),(0,a.kt)("h2",{id:"validator"},"Validator:"),(0,a.kt)("h3",{id:"generate-new-validator-keys"},"Generate new validator keys:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond tx staking create-validator --amount <amount> --from <accAddress> --pubkey $(iond tendermint show-validator) --commission-rate <rate> --commission-max-rate <rate> --commission-max-change-rate <rate> --min-self-delegation <min-self-delegation-amount> --chain-id Test-Denali\n")),(0,a.kt)("h3",{id:"show-your-nodes-validator-consensus-address"},"Show your nodes validator consensus address:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond tendermint show-address\n")),(0,a.kt)("h3",{id:"show-your-nodes-validator-pubkey"},"Show your nodes validator pubkey:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond tendermint show-validator\n")),(0,a.kt)("h3",{id:"show-your-nodes-validator-operators-address"},"Show your nodes validator ",(0,a.kt)("em",{parentName:"h3"},"operators")," address:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond keys show <key address> --bech val\n")))}y.isMDXComponent=!0}}]);