(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,b=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),s=a,u=p["".concat(b,".").concat(s)]||p[s]||m[s]||l;return n?r.a.createElement(u,o(o({ref:t},c),{},{components:n})):r.a.createElement(u,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,b=new Array(l);b[0]=s;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,b[1]=o;for(var c=2;c<l;c++)b[c]=n[c];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),l=(n(0),n(102)),b={title:"Keys"},o={unversionedId:"Client/Keys",id:"Client/Keys",isDocsHomePage:!1,title:"Keys",description:"Keys allows you to manage your local tendermint keystore (wallets) for iond.",source:"@site/docs/Client/Keys.md",slug:"/Client/Keys",permalink:"/Client/Keys",editUrl:"https://github.com/IDEP-network/IDEP-Docs/docs/Client/Keys.md",version:"current",sidebar:"docs",previous:{title:"Bank",permalink:"/Client/Bank"},next:{title:"Tendermint",permalink:"/Client/Tendermint"}},i=[{value:"Available Commands",id:"available-commands",children:[]},{value:"Examples",id:"examples",children:[]}],c={toc:i};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Keys allows you to manage your local tendermint keystore (wallets) for iond."),Object(l.b)("h2",{id:"available-commands"},"Available Commands"),Object(l.b)("hr",null),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Command"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"list"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"list")," command lits all the keys stored by this key manager along with their associated name, type, address and pubkey.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"add"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"add")," command lets add an encrypted private key, encrypt it, and save to disk.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"delete"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"delete")," deletes the given key.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"import"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"import")," command imports private keys into the local keybase.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"export"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"export")," command exports private keys.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"mnemonic"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"mnemonic")," command computes the bip39 mnemonic for some input entropy.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"parse"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"parse")," command parses address from hex to bech32 and vice versa.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"show"),Object(l.b)("td",{parentName:"tr",align:null},"The ",Object(l.b)("inlineCode",{parentName:"td"},"show")," command retrieves key information by name or address.")))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)("hr",null),Object(l.b)("h4",{id:"iond-keys-list-flags"},"iond keys list ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys list\n")),Object(l.b)("h4",{id:"iond-keys-add-flags"},"iond keys add ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys add\n")),Object(l.b)("p",null,"You must enter a password that is atleast 8 characters long."),Object(l.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Write down your mnemonic in a safe place! It is the only way to recover your account if you ever forget your password!"))),Object(l.b)("h4",{id:"iond-keys-delete-key-name-flags"},"iond keys delete ",Object(l.b)("em",{parentName:"h4"},"key-name")," ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys delete mainkey\n")),Object(l.b)("h4",{id:"iond-keys-import-keyname-keyfile-flags"},"iond keys import ",Object(l.b)("em",{parentName:"h4"},"keyname")," ",Object(l.b)("em",{parentName:"h4"},"keyfile")," ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys import mainkey examplefile \n")),Object(l.b)("h4",{id:"iond-keys-export-keyname-flags"},"iond keys export ",Object(l.b)("em",{parentName:"h4"},"keyname")," ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys export mainkey [flags]\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys export mainkey --output-file=<path-to-keystore>\n")),Object(l.b)("h4",{id:"iond-keys-mnemonic-flags"},"iond keys mnemonic ","[flags]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys mnemonic [flags]\n")),Object(l.b)("p",null,"To pass your own entropy, use unsafe-entropy mode."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys mnemonic --unsafe-entropy\n")),Object(l.b)("h4",{id:"iond-keys-parse-hex-or-bech32-address"},"iond keys parse ","[hex-or-bech32-address]"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys parse <hex-or-bech32-address> [flags]\n")),Object(l.b)("h4",{id:"iond-keys-show-key-name-flags"},"iond keys show ",Object(l.b)("em",{parentName:"h4"},"key-name")," ","[flags]"),Object(l.b)("p",null,"flags"),Object(l.b)("hr",null),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Name"),Object(l.b)("th",{parentName:"tr",align:null},"Default"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--address"),Object(l.b)("td",{parentName:"tr",align:null},"false"),Object(l.b)("td",{parentName:"tr",align:null},"Output the address only (overrides --output)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--bech"),Object(l.b)("td",{parentName:"tr",align:null},"The Bech32 prefix encoding for a key (acc/val/cons)"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--device"),Object(l.b)("td",{parentName:"tr",align:null},"Output the address in a ledger device"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--device"),Object(l.b)("td",{parentName:"tr",align:null},"K out of N required signatures"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--pubkey"),Object(l.b)("td",{parentName:"tr",align:null},"false"),Object(l.b)("td",{parentName:"tr",align:null},"Output the public key only (overrides --output)")))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys show mainkey\n")),Object(l.b)("p",null,"Get validator address."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"iond keys show mainkey --bech val\n")))}d.isMDXComponent=!0}}]);