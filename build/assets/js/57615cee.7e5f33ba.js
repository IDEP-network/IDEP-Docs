(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,d=u["".concat(c,".").concat(m)]||u[m]||b[m]||r;return n?o.a.createElement(d,i(i({ref:t},s),{},{components:n})):o.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<r;s++)c[s]=n[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),o=n(7),r=(n(0),n(106)),c=["components"],i={title:"Obtain, Compile, Upload"},l={unversionedId:"SmartContracts/Obtain-Compile-Upload",id:"SmartContracts/Obtain-Compile-Upload",isDocsHomePage:!1,title:"Obtain, Compile, Upload",description:"Obtain",source:"@site/docs/SmartContracts/Obtain-Compile-Upload.md",slug:"/SmartContracts/Obtain-Compile-Upload",permalink:"/SmartContracts/Obtain-Compile-Upload",editUrl:"https://github.com/IDEP-network/IDEP-Docs/docs/SmartContracts/Obtain-Compile-Upload.md",version:"current",sidebar:"docs",previous:{title:"Setup",permalink:"/SmartContracts/Setup"},next:{title:"Interacting with on-chain contract",permalink:"/SmartContracts/Interacting-with-on-chain-contract"}},s=[{value:"Obtain",id:"obtain",children:[{value:"Download",id:"download",children:[]}]},{value:"Compile",id:"compile",children:[]},{value:"Upload",id:"upload",children:[]}],p={toc:s};function u(e){var t=e.components,n=Object(o.a)(e,c);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"obtain"},"Obtain"),Object(r.b)("p",null,"While writing smart contracts is a huge topic in itself, for the purposes of this tutorial we're going to use one of the many examples provided by ",Object(r.b)("a",{parentName:"p",href:"https://cosmwasm.com/"},"cosmwasm"),"."),Object(r.b)("h3",{id:"download"},"Download"),Object(r.b)("p",null,"Use the following commands to clone the repository with needed code:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/CosmWasm/cw-plus.git\n\ncd cw-plus/contracts/cw20-base\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# get the code\ngit clone https://github.com/InterWasm/cw-contracts\ncd cw-contracts\ngit checkout main\ncd contracts/nameservice\n")),Object(r.b)("h2",{id:"compile"},"Compile"),Object(r.b)("p",null,"One of options is to compile the contract with rust stable toolchain."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"rustup default stable\ncargo wasm\n")),Object(r.b)("p",null,"After the compilation is finished, you should be able to find a file in ",Object(r.b)("inlineCode",{parentName:"p"},"target/wasm32-unknown-unknown/release/cw_nameservice.wasm"),". It will be about 1.7mb (you can check the size with ",Object(r.b)("inlineCode",{parentName:"p"},"ls -lh")," command).\nYou can get much smaller version, with thee following command. It instructs the compiler to discard all unused code:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"`RUSTFLAGS='-C link-arg=-s' cargo wasm\n")),Object(r.b)("p",null,"The resulting file about 165kB big. This helps to limit gas usage substantially."),Object(r.b)("h2",{id:"upload"},"Upload"),Object(r.b)("p",null,"You can now upload the contract to the chain."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"cd target/wasm32-unknown-unknown/release\nRES=$(iond tx wasm store cw_nameservice.wasm --from wallet1 $TXFLAGS -y --output json -b block)\n")),Object(r.b)("p",null,"You can find the contracts code in output of the above command, but it is simpler to use following command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"CODE_ID=$(echo $RES | jq -r '.logs[0].events[-1].attributes[0].value')\n")),Object(r.b)("p",null,"As there are no contracts yet, this should return an empty list:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"iond query wasm list-contract-by-code $CODE_ID --output json\n")))}u.isMDXComponent=!0}}]);