(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,p=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.a.createElement(p,b(b({ref:t},c),{},{components:n})):r.a.createElement(p,b({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:a,l[1]=b;for(var c=2;c<i;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),i=(n(0),n(106)),l=["components"],b={title:"Tx"},o={unversionedId:"Client/Tx",id:"Client/Tx",isDocsHomePage:!1,title:"Tx",description:"Tx allows you to sign or broadcast transactions",source:"@site/docs/Client/Tx.md",slug:"/Client/Tx",permalink:"/Client/Tx",editUrl:"https://github.com/IDEP-network/IDEP-Docs/docs/Client/Tx.md",version:"current",sidebar:"docs",previous:{title:"Tendermint",permalink:"/Client/Tendermint"},next:{title:"Setup",permalink:"/SmartContracts/Setup"}},c=[{value:"Available Commands",id:"available-commands",children:[{value:"iond query tx <em>hash</em>",id:"iond-query-tx-hash",children:[]},{value:"iond query txs",id:"iond-query-txs",children:[]},{value:"iond tx sign flags",id:"iond-tx-sign-flags",children:[]},{value:"iond tx broadcast",id:"iond-tx-broadcast",children:[]},{value:"iond tx multisign",id:"iond-tx-multisign",children:[]},{value:"Sign the multisig tx",id:"sign-the-multisig-tx",children:[]}]}],s={toc:c};function d(e){var t=e.components,n=Object(r.a)(e,l);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Tx allows you to sign or broadcast transactions"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Command"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"tx"),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"show-address")," command queries a transaction by hash in a block that's been committed.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"txs"),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"show-node-id")," command searches for transactions that match the exact given events where results are paginated.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"sign"),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"show-validator")," command signs transactions that are generated offline.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"broadcast"),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"broadcast")," command broadcasts a signed transaction to the IDEP network.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"multisign"),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"multisign")," command signs the same transaction by multiple accounts.")))),Object(i.b)("h2",{id:"available-commands"},"Available Commands"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"iond-query-tx-hash"},"iond query tx ",Object(i.b)("em",{parentName:"h3"},"hash")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond query tx 6352278EA34E6CAD7A536BB36A9B12934C6DEEAAAF6D6356522998EF0758A6E2\n")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"iond-query-txs"},"iond query txs"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond query txs --events 'message.sender=<iaa...>&message.action=xxxx' --page 1 --limit 30\n")),Object(i.b)("h3",{id:"iond-tx-sign-flags"},"iond tx sign ","[flags]"),Object(i.b)("p",null,"Sign transactions in generated offline file. The file created with the --generate-only flag."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx sign <file> [flags]\n")),Object(i.b)("p",null,"Flags"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Required"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--append"),Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null},"Attach a signature to an existing signature.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--from"),Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"Key name for signature.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--offline"),Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"Offline mode.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--signature-only"),Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"Print only the generated signature, then exit.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--multisig"),Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"true"),Object(i.b)("td",{parentName:"tr",align:null},"Address of the multisig account on behalf of which the transaction shall be signed.")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"iond-tx-broadcast"},"iond tx broadcast"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx broadcast signed.json --chain-id=Test-Denali\n")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"iond-tx-multisign"},"iond tx multisign"),Object(i.b)("p",null,"Sign a transaction by multiple accounts. The tx could be broadcasted only when the number of signatures meets the multisig-threshold."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx multisign <file> <key-name> <[signature]...> [flags]\n")),Object(i.b)("p",null,"Generate an offline tx by multisig key"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx bank send <from> <to> 69idep --fees=500idep --chain-id=Test-Denali --from=<multisig-keyname> --generate-only > unsigned.json\n")),Object(i.b)("h3",{id:"sign-the-multisig-tx"},"Sign the multisig tx"),Object(i.b)("p",null,"Query the multisig address"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond keys show <multisig-keyname>\n")),Object(i.b)("h5",{id:"sign-the-unsignedjson"},"Sign the ",Object(i.b)("inlineCode",{parentName:"h5"},"unsigned.json")),Object(i.b)("p",null,"Assume the multisig-threshold is 2, here we sign the unsigned.json by 2 of the signers"),Object(i.b)("p",null,"Sign the tx by signer-1:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx sign unsigned.json --from=<signer-keyname-1> --chain-id=Test-Denali --multisig=<multisig-address> --signature-only > signed-1.json\n")),Object(i.b)("p",null,"Sign the tx by signer-2:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx sign unsigned.json --from=<signer-keyname-2> --chain-id=Test-Denali --multisig=<multisig-address> --signature-only > signed-2.json\n")),Object(i.b)("h5",{id:"merge-the-signatures"},"Merge the signatures"),Object(i.b)("p",null,"Merge all the signatures into ",Object(i.b)("inlineCode",{parentName:"p"},"signed.json")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"iond tx multisign --chain-id=Test-Denali unsigned.json <multisig-keyname> signed-1.json signed-2.json > signed.json\n")),Object(i.b)("p",null,"Now broadcast the tx the same was as you would a regular one."))}d.isMDXComponent=!0}}]);