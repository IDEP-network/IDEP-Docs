"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9767],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8348:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={Title:"Initialization"},u=void 0,c={unversionedId:"Guides/Initialization",id:"Guides/Initialization",title:"Initialization",description:"Manual Setup of a new Node",source:"@site/docs/Guides/Initialization.md",sourceDirName:"Guides",slug:"/Guides/Initialization",permalink:"/docs/Guides/Initialization",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Guides/Initialization.md",tags:[],version:"current",frontMatter:{Title:"Initialization"},sidebar:"Docs",previous:{title:"Installation",permalink:"/docs/Guides/Installation"},next:{title:"Joining IDEP's Public Testnet Denali",permalink:"/docs/Guides/Denali"}},s={},p=[{value:"Manual Setup of a new Node",id:"manual-setup-of-a-new-node",level:2},{value:"Start the node",id:"start-the-node",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"manual-setup-of-a-new-node"},"Manual Setup of a new Node"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"These instructions are for setting up a brand new full node from scratch.")),(0,a.kt)("p",null,"Initialize the node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond init <moniker> --chain-id Test-Denali\n")),(0,a.kt)("p",null,"Note Monikers can contain only ASCII characters. Using Unicode characters is not supported and renders your node unreachable."),(0,a.kt)("p",null,"By default, the init command creates your ~/.ion directory with subfolders config and data. In the config directory, the most important files for configuration are app.toml and config.toml."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond keys add <accountname>\n")),(0,a.kt)("p",null,"Make sure you save your mnemonic in a secure location!"),(0,a.kt)("p",null,"Next make your way to the nodes config directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd ~/.ion/config/\n")),(0,a.kt)("p",null,"Remove the genesis.json and replace it with the one provided for the network you are trying to connect to."),(0,a.kt)("h2",{id:"start-the-node"},"Start the node"),(0,a.kt)("p",null,"You can now start the node with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond start --p2p.persistent_peers=95a7b71ab6ad8fad5f1ed3b49472683adea92cf1@142.93.65.220:26656,dc07da4be6ff285a1be2e9501fa92efef248d025@64.225.75.108:26656\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note")," The following example is taken from the testnet Denali, and will be different for mainnet."),(0,a.kt)("p",null,"Now check the status of your node with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iond status\n")),(0,a.kt)("p",null,"You can stop the node at any time using Ctrl+C."))}f.isMDXComponent=!0}}]);