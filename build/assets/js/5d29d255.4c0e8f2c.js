"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6556],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return g}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),p=u(n),g=r,c=p["".concat(s,".").concat(g)]||p[g]||m[g]||l;return n?a.createElement(c,i(i({ref:e},d),{},{components:n})):a.createElement(c,i({ref:e},d))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5723:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={title:"Tx"},s=void 0,u={unversionedId:"Client/Tx",id:"Client/Tx",title:"Tx",description:"Tx allows you to sign or broadcast transactions",source:"@site/docs/Client/Tx.md",sourceDirName:"Client",slug:"/Client/Tx",permalink:"/docs/Client/Tx",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Client/Tx.md",tags:[],version:"current",frontMatter:{title:"Tx"},sidebar:"Docs",previous:{title:"Tendermint",permalink:"/docs/Client/Tendermint"},next:{title:"Overview",permalink:"/docs/Developers/Overview"}},d={},m=[{value:"Available Commands",id:"available-commands",level:2},{value:"iond query tx <em>hash</em>",id:"iond-query-tx-hash",level:3},{value:"iond query txs",id:"iond-query-txs",level:3},{value:"iond tx sign flags",id:"iond-tx-sign-flags",level:3},{value:"iond tx broadcast",id:"iond-tx-broadcast",level:3},{value:"iond tx multisign",id:"iond-tx-multisign",level:3},{value:"Sign the multisig tx",id:"sign-the-multisig-tx",level:3},{value:"Sign the <code>unsigned.json</code>",id:"sign-the-unsignedjson",level:5},{value:"Merge the signatures",id:"merge-the-signatures",level:5}],p={toc:m};function g(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Tx allows you to sign or broadcast transactions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tx"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"show-address")," command queries a transaction by hash in a block that's been committed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"txs"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"show-node-id")," command searches for transactions that match the exact given events where results are paginated.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sign"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"show-validator")," command signs transactions that are generated offline.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"broadcast"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"broadcast")," command broadcasts a signed transaction to the IDEP network.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"multisign"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"multisign")," command signs the same transaction by multiple accounts.")))),(0,l.kt)("h2",{id:"available-commands"},"Available Commands"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iond-query-tx-hash"},"iond query tx ",(0,l.kt)("em",{parentName:"h3"},"hash")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond query tx 6352278EA34E6CAD7A536BB36A9B12934C6DEEAAAF6D6356522998EF0758A6E2\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iond-query-txs"},"iond query txs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond query txs --events 'message.sender=<iaa...>&message.action=xxxx' --page 1 --limit 30\n")),(0,l.kt)("h3",{id:"iond-tx-sign-flags"},"iond tx sign ","[flags]"),(0,l.kt)("p",null,"Sign transactions in generated offline file. The file created with the --generate-only flag."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx sign <file> [flags]\n")),(0,l.kt)("p",null,"Flags"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--append"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Attach a signature to an existing signature.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--from"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Key name for signature.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--offline"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Offline mode.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--signature-only"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Print only the generated signature, then exit.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--multisig"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the multisig account on behalf of which the transaction shall be signed.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iond-tx-broadcast"},"iond tx broadcast"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx broadcast signed.json --chain-id=Test-Denali\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iond-tx-multisign"},"iond tx multisign"),(0,l.kt)("p",null,"Sign a transaction by multiple accounts. The tx could be broadcasted only when the number of signatures meets the multisig-threshold."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx multisign <file> <key-name> <[signature]...> [flags]\n")),(0,l.kt)("p",null,"Generate an offline tx by multisig key"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx bank send <from> <to> 69idep --fees=500idep --chain-id=Test-Denali --from=<multisig-keyname> --generate-only > unsigned.json\n")),(0,l.kt)("h3",{id:"sign-the-multisig-tx"},"Sign the multisig tx"),(0,l.kt)("p",null,"Query the multisig address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys show <multisig-keyname>\n")),(0,l.kt)("h5",{id:"sign-the-unsignedjson"},"Sign the ",(0,l.kt)("inlineCode",{parentName:"h5"},"unsigned.json")),(0,l.kt)("p",null,"Assume the multisig-threshold is 2, here we sign the unsigned.json by 2 of the signers"),(0,l.kt)("p",null,"Sign the tx by signer-1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx sign unsigned.json --from=<signer-keyname-1> --chain-id=Test-Denali --multisig=<multisig-address> --signature-only > signed-1.json\n")),(0,l.kt)("p",null,"Sign the tx by signer-2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx sign unsigned.json --from=<signer-keyname-2> --chain-id=Test-Denali --multisig=<multisig-address> --signature-only > signed-2.json\n")),(0,l.kt)("h5",{id:"merge-the-signatures"},"Merge the signatures"),(0,l.kt)("p",null,"Merge all the signatures into ",(0,l.kt)("inlineCode",{parentName:"p"},"signed.json")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond tx multisign --chain-id=Test-Denali unsigned.json <multisig-keyname> signed-1.json signed-2.json > signed.json\n")),(0,l.kt)("p",null,"Now broadcast the tx the same was as you would a regular one."))}g.isMDXComponent=!0}}]);