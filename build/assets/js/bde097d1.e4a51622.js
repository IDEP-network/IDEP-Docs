"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9723],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return n?o.createElement(h,r(r({ref:t},u),{},{components:n})):o.createElement(h,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var d=2;d<i;d++)r[d]=n[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9636:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var o=n(7462),a=n(3366),i=(n(7294),n(3905)),r=["components"],l={title:"Run Full Node"},s=void 0,d={unversionedId:"Validators/run-full-node",id:"Validators/run-full-node",title:"Run Full Node",description:"How To Join IDEP Network as a Full Node",source:"@site/docs/Validators/run-full-node.md",sourceDirName:"Validators",slug:"/Validators/run-full-node",permalink:"/docs/Validators/run-full-node",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Validators/run-full-node.md",tags:[],version:"current",frontMatter:{title:"Run Full Node"},sidebar:"Docs",previous:{title:"Prepare your Hardware",permalink:"/docs/Validators/setup-sgx"},next:{title:"Join as a Validator",permalink:"/docs/Validators/join-validator-testnet"}},u={},c=[{value:"How To Join IDEP Network as a Full Node",id:"how-to-join-idep-network-as-a-full-node",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Minimum requirements",id:"minimum-requirements",level:3},{value:"Recommended requirements",id:"recommended-requirements",level:3},{value:"Installation",id:"installation",level:2},{value:"1. Download the IDEP Network package installer for Debian/Ubuntu:",id:"1-download-the-idep-network-package-installer-for-debianubuntu",level:3},{value:"2. Install the package:",id:"2-install-the-package",level:3},{value:"3. Initialize your installation of the IDEP Network.",id:"3-initialize-your-installation-of-the-idep-network",level:3},{value:"4. Download a copy of the Genesis Block file: genesis.json",id:"4-download-a-copy-of-the-genesis-block-file-genesisjson",level:3},{value:"5. Validate the checksum for the <code>genesis.json</code> file you have just downloaded in the previous step:",id:"5-validate-the-checksum-for-the-genesisjson-file-you-have-just-downloaded-in-the-previous-step",level:3},{value:"6. Validate that the genesis.json is a valid genesis file:",id:"6-validate-that-the-genesisjson-is-a-valid-genesis-file",level:3},{value:"7. The rest of the commands should be run from the home folder (/home/&lt;your_username&gt;)",id:"7-the-rest-of-the-commands-should-be-run-from-the-home-folder-homeyour_username",level:3},{value:"8. Initialize secret enclave",id:"8-initialize-secret-enclave",level:3},{value:"8a. Initialize secret enclave - Automatic Registration (EXPERIMENTAL)",id:"8a-initialize-secret-enclave---automatic-registration-experimental",level:3},{value:"8b. Initialize secret enclave - Manual Registration (legacy)",id:"8b-initialize-secret-enclave---manual-registration-legacy",level:3},{value:"9. Check that initialization was successful",id:"9-check-that-initialization-was-successful",level:3},{value:"10. Check your certificate is valid",id:"10-check-your-certificate-is-valid",level:3},{value:"11. Config <code>ioncli</code>, to point to a working node and import a key with some $IDEP",id:"11-config-ioncli-to-point-to-a-working-node-and-import-a-key-with-some-idep",level:3},{value:"12. Register your node on-chain",id:"12-register-your-node-on-chain",level:3},{value:"13. Pull &amp; check your node&#39;s encrypted seed from the network",id:"13-pull--check-your-nodes-encrypted-seed-from-the-network",level:3},{value:"14. Get additional network parameters",id:"14-get-additional-network-parameters",level:3},{value:"15. Configure your IDEP node",id:"15-configure-your-idep-node",level:3},{value:"16. Add persistent peers and seeds to your configuration file.",id:"16-add-persistent-peers-and-seeds-to-your-configuration-file",level:3},{value:"17. Listen for incoming RPC requests so that light nodes can connect to you:",id:"17-listen-for-incoming-rpc-requests-so-that-light-nodes-can-connect-to-you",level:3},{value:"18. Enable IDEP-node as a system service:",id:"18-enable-idep-node-as-a-system-service",level:3},{value:"19. Start <code>IDEP-node</code> as a system service:",id:"19-start-idep-node-as-a-system-service",level:3},{value:"20. If everything above worked correctly, the following command will show your node streaming blocks (this is for debugging purposes only, kill this command anytime with Ctrl-C):",id:"20-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c",level:3},{value:"21. Optimization",id:"21-optimization",level:3},{value:"22. Get your node ID with:",id:"22-get-your-node-id-with",level:3},{value:"23. Optional: make your full node into a validator",id:"23-optional-make-your-full-node-into-a-validator",level:3}],p={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"how-to-join-idep-network-as-a-full-node"},"How To Join IDEP Network as a Full Node"),(0,i.kt)("p",null,"This document details how to join the IDEP Network Sanford-X testnet as a full node. Once your full node is running, you can turn it into a validator in the optional last step."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("hr",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ubuntu/Debian host (with ZFS or LVM to be able to add more storage easily)"),(0,i.kt)("li",{parentName:"ul"},"A public IP address"),(0,i.kt)("li",{parentName:"ul"},"Open ports TCP ",(0,i.kt)("inlineCode",{parentName:"li"},"26656 & 26657")," ",(0,i.kt)("em",{parentName:"li"},"Note: If you're behind a router or firewall then you'll need to port forward on the network device.")),(0,i.kt)("li",{parentName:"ul"},"Reading Tendermint: Running in production"),(0,i.kt)("li",{parentName:"ul"},"RPC address of an already active node. You can use any node that exposes RPC services."),(0,i.kt)("li",{parentName:"ul"},"Refer to Intel Processor Specifications if you're unsure if your processor supports SGX")),(0,i.kt)("h3",{id:"minimum-requirements"},"Minimum requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"16GB RAM"),(0,i.kt)("li",{parentName:"ul"},"512GB SDD"),(0,i.kt)("li",{parentName:"ul"},"1 dedicated core of any Intel Skylake processor (Intel\xae 6th generation) or better (Xeon gen3 (Ice Lake) NOT supported)"),(0,i.kt)("li",{parentName:"ul"},"Motherboard with support for SGX in the BIOS")),(0,i.kt)("h3",{id:"recommended-requirements"},"Recommended requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"32GB RAM"),(0,i.kt)("li",{parentName:"ul"},"1TB SSD"),(0,i.kt)("li",{parentName:"ul"},"2 dedicated cores of any Intel Skylake processor (Intel\xae 6th generation) or better (Xeon gen3 (Ice Lake) NOT supported)"),(0,i.kt)("li",{parentName:"ul"},"Motherboard with support for SGX in the BIOS")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Step up SGX on your local machine\nSee instructions for setup and verification. See registration if you'd like a more comprehensive overview on what's happening in these steps.")),(0,i.kt)("h3",{id:"1-download-the-idep-network-package-installer-for-debianubuntu"},"1. Download the IDEP Network package installer for Debian/Ubuntu:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/idepnetwork/<RELEASE>\n")),(0,i.kt)("p",null," check the hash of the downloaded binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'echo "<hash> release" | sha256sum --check\n')),(0,i.kt)("p",null,"[(How to verify releases)]"),(0,i.kt)("h3",{id:"2-install-the-package"},"2. Install the package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dpkg -i idepnetwork<RELEASE>.deb\n")),(0,i.kt)("p",null,"Verify the installation by doing:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iond version\n")),(0,i.kt)("h3",{id:"3-initialize-your-installation-of-the-idep-network"},"3. Initialize your installation of the IDEP Network."),(0,i.kt)("p",null,"Choose a ",(0,i.kt)("strong",{parentName:"p"},"moniker")," for yourself, and replace ",(0,i.kt)("inlineCode",{parentName:"p"},"<MONIKER>")," with your moniker below. This moniker will serve as your public nickname in the network."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iond init <MONIKER> --chain-id Sanford-X\n")),(0,i.kt)("h3",{id:"4-download-a-copy-of-the-genesis-block-file-genesisjson"},"4. Download a copy of the Genesis Block file: genesis.json"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'wget -O ~/.iond/config/genesis.json "https://github.com/idepnetwork/gensis.json"\n')),(0,i.kt)("h3",{id:"5-validate-the-checksum-for-the-genesisjson-file-you-have-just-downloaded-in-the-previous-step"},"5. Validate the checksum for the ",(0,i.kt)("inlineCode",{parentName:"h3"},"genesis.json")," file you have just downloaded in the previous step:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'echo "759e1b6761c14fb448bf4b515ca297ab382855b20bae2af88a7bdd82eb1f44b9 $HOME/.iond/config/genesis.json" | sha256sum --check\n')),(0,i.kt)("h3",{id:"6-validate-that-the-genesisjson-is-a-valid-genesis-file"},"6. Validate that the genesis.json is a valid genesis file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iond validate-genesis\n")),(0,i.kt)("h3",{id:"7-the-rest-of-the-commands-should-be-run-from-the-home-folder-homeyour_username"},"7. The rest of the commands should be run from the home folder (/home/<your_username>)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\n")),(0,i.kt)("h3",{id:"8-initialize-secret-enclave"},"8. Initialize secret enclave"),(0,i.kt)("p",null,"You can choose between two ways, 8a (automatic) or 8b (manual):"),(0,i.kt)("p",null,"Note: if this machine has been registered before, and have the following files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"/home/user/.sgx_secrets/\n\u251c\u2500\u2500 consensus_seed.sealed\n\u2514\u2500\u2500 new_node_seed_exchange_keypair.sealed\n")),(0,i.kt)("p",null,"you can move them to /opt/idep/.sgx_secrets and skip to step 16 (if not working, try registering anyway)."),(0,i.kt)("h3",{id:"8a-initialize-secret-enclave---automatic-registration-experimental"},"8a. Initialize secret enclave - Automatic Registration (EXPERIMENTAL)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Note"),": Make sure SGX is running or this step might fail.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Make sure the directory ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/idep/.sgx_secrets")," exists:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/idep/.sgx_secrets\n")),(0,i.kt)("p",null,"Create env variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export SCRT_ENCLAVE_DIR=/usr/lib\nexport SCRT_SGX_STORAGE=/opt/idep/.sgx_secrets\n")),(0,i.kt)("p",null,"Register:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iond auto-register --node http://<IP>:1317 --registration-node http://<IP>>:26667\n")),(0,i.kt)("p",null,"If this step was successful, you can skip straight to step 16"),(0,i.kt)("h3",{id:"8b-initialize-secret-enclave---manual-registration-legacy"},"8b. Initialize secret enclave - Manual Registration (legacy)"),(0,i.kt)("p",null,"Make sure the directory ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/idep/.sgx_secrets/")," exists:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/idep/.sgx_secrets/\n")),(0,i.kt)("p",null,"Make sure SGX is running or this step might fail."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iond init-enclave\n")),(0,i.kt)("h3",{id:"9-check-that-initialization-was-successful"},"9. Check that initialization was successful"),(0,i.kt)("p",null,"Attestation certificate should have been created by the previous step"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ls -lh /opt/idep/.sgx_secrets/attestation_cert.der\n")),(0,i.kt)("h3",{id:"10-check-your-certificate-is-valid"},"10. Check your certificate is valid"),(0,i.kt)("p",null,"Should print your 64 character registration key if it was successful."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PUBLIC_KEY=$(iond parse /opt/idep/.sgx_secrets/attestation_cert.der  2> /dev/null | cut -c 3-)\necho $PUBLIC_KEY\n")),(0,i.kt)("h3",{id:"11-config-ioncli-to-point-to-a-working-node-and-import-a-key-with-some-idep"},"11. Config ",(0,i.kt)("inlineCode",{parentName:"h3"},"ioncli"),", to point to a working node and import a key with some $IDEP"),(0,i.kt)("p",null,"The steps using ",(0,i.kt)("inlineCode",{parentName:"p"},"ioncli")," can be run on any machine, they don't need to be on the full node itself. We'll refer to the machine where you are using ",(0,i.kt)("inlineCode",{parentName:"p"},"ioncli"),' as the "CLI machine" below.'),(0,i.kt)("p",null,"To run the steps with ",(0,i.kt)("inlineCode",{parentName:"p"},"ioncli")," on another machine, set up the CLI there."),(0,i.kt)("p",null,"Configure ",(0,i.kt)("inlineCode",{parentName:"p"},"ioncli"),". Initially you'll be using the bootstrap node, as you'll need to connect to a running node and your own node is not running yet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ioncli config chain-id sanford-x\nioncli config node http://<ip>>:26657/\nioncli config output json\n")),(0,i.kt)("p",null,"Set up a key. Make sure you back up the mnemonic and the keyring password."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ioncli keys add <key-alias>\n")),(0,i.kt)("p",null,"This will output your address, a 45 character-string starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"idep1....")," Then you can fund it with some $IDEP."),(0,i.kt)("h3",{id:"12-register-your-node-on-chain"},"12. Register your node on-chain"),(0,i.kt)("p",null,"Run this step on the CLI machine. If you're using a different CLI machine than the full node, copy ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/idep/.sgx_secrets/attestation_cert.der")," from the full node to the CLI machine."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ioncli tx register auth /opt/idep/.sgx_secrets/attestation_cert.der -y --from <key-alias>\n")),(0,i.kt)("h3",{id:"13-pull--check-your-nodes-encrypted-seed-from-the-network"},"13. Pull & check your node's encrypted seed from the network"),(0,i.kt)("p",null,"Run this step on the CLI machine."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"SEED=$(ioncli query register seed $PUBLIC_KEY | cut -c 3-)\necho $SEED\n")),(0,i.kt)("h3",{id:"14-get-additional-network-parameters"},"14. Get additional network parameters"),(0,i.kt)("p",null,"Run this step on the CLI machine."),(0,i.kt)("p",null,"These are necessary to configure the node before it starts."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ioncli query register idep-network-params\nls -lh ./io-master-cert.der ./node-master-cert.der\n")),(0,i.kt)("p",null,"If you're using a different CLI machine than the validator node, copy ",(0,i.kt)("inlineCode",{parentName:"p"},"node-master-cert.der")," from the CLI machine to the validator node."),(0,i.kt)("h3",{id:"15-configure-your-idep-node"},"15. Configure your IDEP node"),(0,i.kt)("p",null,"From here on, run commands on the full node again."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/.iond/.node\niond configure-secret node-master-cert.der $SEED\n")),(0,i.kt)("h3",{id:"16-add-persistent-peers-and-seeds-to-your-configuration-file"},"16. Add persistent peers and seeds to your configuration file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'perl -i -pe \'s/seeds = ""/seeds = "7649dcfda0eb77b38fde8e817da8071faea3cd13\\@bootstrap.scrt.network:26656,ac74aa5908816a54c0da62b6f1cbfa9cc4a8a4ff\\@45.77.125.31:26656"/\' ~/.iond/config/config.toml\n')),(0,i.kt)("p",null,"You may use the following peers, or you can choose your own from ","[this list]","."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'perl -i -pe \'s/persistent_peers = ""/persistent_peers = "555d083ffc6b4acca46fa0c78a545bb799f72296\\@morty.secretnodes.com:26656,7c9f5e1cd79c4d5ee83e2a82b133efe0bd74732d\\@secret-ibc.blockngine.io:26656,7ecc77c5d79520cd613488e69bfbb324ac22280c\\@node.securesecrets.org:26656,4378c3df119539623d190e6b81e359b57b152675\\@135.148.55.229:10656,971911193b09a17c347565d311a3cc4f6004156d\\@peer.node.scrtlabs.com:26656"/\' ~/.iond/config/config.toml\n')),(0,i.kt)("h3",{id:"17-listen-for-incoming-rpc-requests-so-that-light-nodes-can-connect-to-you"},"17. Listen for incoming RPC requests so that light nodes can connect to you:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'perl -i -pe \'s/laddr = .+?26657"/laddr = "tcp:\\/\\/0.0.0.0:26657"/\' ~/.iond/config/config.toml\n')),(0,i.kt)("h3",{id:"18-enable-idep-node-as-a-system-service"},"18. Enable IDEP-node as a system service:"),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"idep-node")," system file is created in a previous step."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable secret-node\n")),(0,i.kt)("h3",{id:"19-start-idep-node-as-a-system-service"},"19. Start ",(0,i.kt)("inlineCode",{parentName:"h3"},"IDEP-node")," as a system service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start secret-node\n")),(0,i.kt)("h3",{id:"20-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c"},"20. If everything above worked correctly, the following command will show your node streaming blocks (this is for debugging purposes only, kill this command anytime with Ctrl-C):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -f -u idep-node\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'-- Logs begin at Mon 2022-04-28 12:11:24 UTC. --\nNov 09 11:16:31 idep-node-01 iond[619529]: 11:16AM INF indexed block height=12 module=txindex\nNov 09 11:16:35 idep-node-01 iond[619529]: 11:16AM INF Ensure peers module=pex numDialing=0 numInPeers=0 numOutPeers=0 numToDial=10\nNov 09 11:16:35 idep-node-01 iond[619529]: 11:16AM INF No addresses to dial. Falling back to seeds module=pex\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF Timed out dur=4983.86819 height=13 module=consensus round=0 step=1\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF received proposal module=consensus proposal={"Type":32,"block_id":{"hash":"0AF9693538AB0C753A7EA16CB618C5D988CD7DC01D63742DC4795606D10F0CA4","parts":{"hash":"58F6211ED5D6795E2AE4D3B9DBB1280AD92B2EE4EEBAA2910F707C104258D2A0","total":1}},"height":13,"pol_round":-1,"round":0,"signature":"eHY9dH8dG5hElNEGbw1U5rWqPp7nXC/VvOlAbF4DeUQu/+q7xv5nmc0ULljGEQR8G9fhHaMQuKjgrxP2KsGICg==","timestamp":"2021-11-09T11:16:36.7744083Z"}\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF received complete proposal block hash=0AF9693538AB0C753A7EA16CB618C5D988CD7DC01D63742DC4795606D10F0CA4 height=13 module=consensus\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF finalizing commit of block hash=0AF9693538AB0C753A7EA16CB618C5D988CD7DC01D63742DC4795606D10F0CA4 height=13 module=consensus num_txs=0 root=E4968C9B525DADA22A346D5E158C648BC561EEC351F402A611B9DA2706FD8267\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF minted coins from module account amount=6268801uscrt from=mint module=x/bank\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF executed block height=13 module=state num_invalid_txs=0 num_valid_txs=0\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF commit synced commit=436F6D6D697449447B5B373520353520323020352032342031312032333820353320383720313137203133372031323020313638203234302035302032323020353720343520363620313832203138392032333920393920323439203736203338203131322035342032332033203233362034375D3A447D\nNov 09 11:16:36 idep-node-01 iond[619529]: 11:16AM INF committed state app_hash=4B371405180BEE3557758978A8F032DC392D42B6BDEF63F94C2670361703EC2F height=13 module=state num_txs=0\n^C\n')),(0,i.kt)("p",null,"You are now a full node. \ud83c\udf89"),(0,i.kt)("h3",{id:"21-optimization"},"21. Optimization"),(0,i.kt)("p",null,"In order to be able to handle NFT minting and other Secret Contract-heavy operations, it's recommended to update your SGX memory enclave cache:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'sed -i.bak -e "s/^contract-memory-enclave-cache-size *=.*/contract-memory-enclave-cache-size = \\"15\\"/" ~/.secretd/config/app.toml\n')),(0,i.kt)("h3",{id:"22-get-your-node-id-with"},"22. Get your node ID with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"iondd tendermint show-node-id\n")),(0,i.kt)("p",null,"Be sure to point your CLI to your running node instead of the bootstrap node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ioncli config node tcp://localhost:26657\n")),(0,i.kt)("p",null,"If someone wants to add you as a peer, have them add the above address to their ",(0,i.kt)("inlineCode",{parentName:"p"},"persistent_peers")," in their ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.iond/config/config.toml"),"."),(0,i.kt)("p",null,"And if someone wants to use your node from their ",(0,i.kt)("inlineCode",{parentName:"p"},"ioncli")," then have them run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ioncli config chain-id Sanford-X\nioncli config output json\nioncli config node tcp://<your-public-ip>:26657\n")),(0,i.kt)("h3",{id:"23-optional-make-your-full-node-into-a-validator"},"23. Optional: make your full node into a validator"),(0,i.kt)("p",null,"To turn your full node into a validator, see Joining Mainnet as a Validator."))}m.isMDXComponent=!0}}]);