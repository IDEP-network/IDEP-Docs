"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[170],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),k=s(n),u=r,y=k["".concat(d,".").concat(u)]||k[u]||p[u]||l;return n?a.createElement(y,o(o({ref:t},m),{},{components:n})):a.createElement(y,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=k;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8002:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={title:"Keys"},d=void 0,s={unversionedId:"Client/Keys",id:"Client/Keys",title:"Keys",description:"Keys allows you to manage your local tendermint keystore (wallets) for iond.",source:"@site/docs/Client/Keys.md",sourceDirName:"Client",slug:"/Client/Keys",permalink:"/docs/Client/Keys",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Client/Keys.md",tags:[],version:"current",frontMatter:{title:"Keys"},sidebar:"Docs",previous:{title:"Bank",permalink:"/docs/Client/Bank"},next:{title:"Tendermint",permalink:"/docs/Client/Tendermint"}},m={},p=[{value:"Available Commands",id:"available-commands",level:2},{value:"Examples",id:"examples",level:2},{value:"iond keys list flags",id:"iond-keys-list-flags",level:4},{value:"iond keys add flags",id:"iond-keys-add-flags",level:4},{value:"iond keys delete <em>key-name</em> flags",id:"iond-keys-delete-key-name-flags",level:4},{value:"iond keys import <em>keyname</em> <em>keyfile</em> flags",id:"iond-keys-import-keyname-keyfile-flags",level:4},{value:"iond keys export <em>keyname</em> flags",id:"iond-keys-export-keyname-flags",level:4},{value:"iond keys mnemonic flags",id:"iond-keys-mnemonic-flags",level:4},{value:"iond keys parse hex-or-bech32-address",id:"iond-keys-parse-hex-or-bech32-address",level:4},{value:"iond keys show <em>key-name</em> flags",id:"iond-keys-show-key-name-flags",level:4}],k={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Keys allows you to manage your local tendermint keystore (wallets) for iond."),(0,l.kt)("h2",{id:"available-commands"},"Available Commands"),(0,l.kt)("hr",null),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"list")," command lits all the keys stored by this key manager along with their associated name, type, address and pubkey.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"add"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"add")," command lets add an encrypted private key, encrypt it, and save to disk.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delete"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"delete")," deletes the given key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"import"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"import")," command imports private keys into the local keybase.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"export"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"export")," command exports private keys.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mnemonic"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"mnemonic")," command computes the bip39 mnemonic for some input entropy.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"parse"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"parse")," command parses address from hex to bech32 and vice versa.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"show"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"show")," command retrieves key information by name or address.")))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"iond-keys-list-flags"},"iond keys list ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys list\n")),(0,l.kt)("h4",{id:"iond-keys-add-flags"},"iond keys add ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys add\n")),(0,l.kt)("p",null,"You must enter a password that is atleast 8 characters long."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Write down your mnemonic in a safe place! It is the only way to recover your account if you ever forget your password!"))),(0,l.kt)("h4",{id:"iond-keys-delete-key-name-flags"},"iond keys delete ",(0,l.kt)("em",{parentName:"h4"},"key-name")," ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys delete mainkey\n")),(0,l.kt)("h4",{id:"iond-keys-import-keyname-keyfile-flags"},"iond keys import ",(0,l.kt)("em",{parentName:"h4"},"keyname")," ",(0,l.kt)("em",{parentName:"h4"},"keyfile")," ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys import mainkey examplefile \n")),(0,l.kt)("h4",{id:"iond-keys-export-keyname-flags"},"iond keys export ",(0,l.kt)("em",{parentName:"h4"},"keyname")," ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys export mainkey [flags]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys export mainkey --output-file=<path-to-keystore>\n")),(0,l.kt)("h4",{id:"iond-keys-mnemonic-flags"},"iond keys mnemonic ","[flags]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys mnemonic [flags]\n")),(0,l.kt)("p",null,"To pass your own entropy, use unsafe-entropy mode."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys mnemonic --unsafe-entropy\n")),(0,l.kt)("h4",{id:"iond-keys-parse-hex-or-bech32-address"},"iond keys parse ","[hex-or-bech32-address]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys parse <hex-or-bech32-address> [flags]\n")),(0,l.kt)("h4",{id:"iond-keys-show-key-name-flags"},"iond keys show ",(0,l.kt)("em",{parentName:"h4"},"key-name")," ","[flags]"),(0,l.kt)("p",null,"flags"),(0,l.kt)("hr",null),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--address"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Output the address only (overrides --output)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--bech"),(0,l.kt)("td",{parentName:"tr",align:null},"The Bech32 prefix encoding for a key (acc/val/cons)"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--device"),(0,l.kt)("td",{parentName:"tr",align:null},"Output the address in a ledger device"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--device"),(0,l.kt)("td",{parentName:"tr",align:null},"K out of N required signatures"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--pubkey"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Output the public key only (overrides --output)")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys show mainkey\n")),(0,l.kt)("p",null,"Get validator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"iond keys show mainkey --bech val\n")))}u.isMDXComponent=!0}}]);