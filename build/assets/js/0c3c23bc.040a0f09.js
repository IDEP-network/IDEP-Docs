"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8214],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9347:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Joining IDEP's Public Testnet Denali"},u=void 0,c={unversionedId:"Guides/Denali",id:"Guides/Denali",title:"Joining IDEP's Public Testnet Denali",description:"Denali",source:"@site/docs/Guides/Denali.md",sourceDirName:"Guides",slug:"/Guides/Denali",permalink:"/docs/Guides/Denali",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Guides/Denali.md",tags:[],version:"current",frontMatter:{title:"Joining IDEP's Public Testnet Denali"},sidebar:"Docs",previous:{title:"Initialization",permalink:"/docs/Guides/Initialization"},next:{title:"Keys",permalink:"/docs/Guides/Keys"}},s={},p=[{value:"Quick rundown",id:"quick-rundown",level:2},{value:"Validator-Setup",id:"validator-setup",level:2},{value:"FAQ",id:"faq",level:2}],d={toc:p};function m(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Denali",src:n(2634).Z,width:"1920",height:"1080"})),(0,i.kt)("h2",{id:"quick-rundown"},"Quick rundown"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Make sure you have completed the ",(0,i.kt)("a",{parentName:"p",href:"/docs/Guides/Installation"},"installation")," successfully.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Initialize your node with your moniker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Copy the genesis file from the IDEP repo and place it in the nodes config directory")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Start the node"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iond init <moniker> --chain-id Test-Denali\n\niond keys add <accountname>\n\nwget https://raw.githubusercontent.com/IDEP-network/testnet-binaries/main/Denali-0.0.1/genesis.json?token=APTYVG5VFPHLIWZB6NPQSIDBDSF7O\n\nmv genesis.json ~/ion/config/\n\niond start --p2p.persistent_peers=95a7b71ab6ad8fad5f1ed3b49472683adea92cf1@142.93.65.220:26656,dc07da4be6ff285a1be2e9501fa92efef248d025@64.225.75.108:26656\n")),(0,i.kt)("h2",{id:"validator-setup"},"Validator-Setup"),(0,i.kt)("p",null,"Once the Full Node is up and running. Please share your IDEP address with the IDEP team. We will fund your address."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"You can @ or DM denny007#3282 on Discord.\n")),(0,i.kt)("p",null,"To get your Public Address"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iond keys list\n")),(0,i.kt)("p",null,"To get the Validator-pub-key"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iond tendermint show-validator\n")),(0,i.kt)("p",null,"Command to create a Validator"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iond tx staking create-validator --amount <amount> --from <from-address> --pubkey <validator-pub-key> --commission-rate 0.01 --commission-max-rate 0.05 --commission-max-change-rate 0.005 --min-self-delegation 1 --chain-id Test-Denali\n")),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("p",null,"Example of a command to create a Validator"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iond tx staking create-validator --amount 15000000000000idep --from idep1d2nqcwf9zz9fx7xlesyt0gc3utfxe2mk6nfwey --pubkey idepvalconspub1zcjduepqztw5yzm5wj0yc600aaemxlmda5488jv9hycxfnta3w7vz9jgpawqc9qnhs --commission-rate 0.01 --commission-max-rate 0.05 --commission-max-change-rate 0.005 --min-self-delegation 1 --chain-id Test-Denali\n")))}m.isMDXComponent=!0},2634:function(e,t,n){t.Z=n.p+"assets/images/Denali1-183bced7d8661f0bc38221075c388ca5.png"}}]);